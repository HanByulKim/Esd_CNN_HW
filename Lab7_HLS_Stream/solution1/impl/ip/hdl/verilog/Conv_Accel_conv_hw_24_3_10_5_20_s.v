// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_Accel_conv_hw_24_3_10_5_20_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_q0,
        filter_address0,
        filter_ce0,
        filter_q0,
        bias_address0,
        bias_ce0,
        bias_q0,
        feature_map_address0,
        feature_map_ce0,
        feature_map_we0,
        feature_map_d0,
        feature_map_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 21'b1;
parameter    ap_ST_st2_fsm_1 = 21'b10;
parameter    ap_ST_st3_fsm_2 = 21'b100;
parameter    ap_ST_st4_fsm_3 = 21'b1000;
parameter    ap_ST_st5_fsm_4 = 21'b10000;
parameter    ap_ST_st6_fsm_5 = 21'b100000;
parameter    ap_ST_st7_fsm_6 = 21'b1000000;
parameter    ap_ST_st8_fsm_7 = 21'b10000000;
parameter    ap_ST_st9_fsm_8 = 21'b100000000;
parameter    ap_ST_st10_fsm_9 = 21'b1000000000;
parameter    ap_ST_st11_fsm_10 = 21'b10000000000;
parameter    ap_ST_st12_fsm_11 = 21'b100000000000;
parameter    ap_ST_st13_fsm_12 = 21'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 21'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 21'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 21'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 21'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 21'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 21'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 21'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 21'b100000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] image_r_address0;
output   image_r_ce0;
input  [31:0] image_r_q0;
output  [9:0] filter_address0;
output   filter_ce0;
input  [31:0] filter_q0;
output  [3:0] bias_address0;
output   bias_ce0;
input  [31:0] bias_q0;
output  [11:0] feature_map_address0;
output   feature_map_ce0;
output   feature_map_we0;
output  [31:0] feature_map_d0;
input  [31:0] feature_map_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg image_r_ce0;
reg filter_ce0;
reg bias_ce0;
reg[11:0] feature_map_address0;
reg feature_map_ce0;
reg feature_map_we0;
reg[31:0] feature_map_d0;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm = 21'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_39;
wire   [3:0] filt_4_fu_234_p2;
reg   [3:0] filt_4_reg_698;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_77;
wire   [8:0] tmp_38_fu_269_p2;
reg   [8:0] tmp_38_reg_703;
wire   [0:0] exitcond8_fu_228_p2;
reg   [3:0] bias_addr_reg_708;
wire   [4:0] i_4_fu_281_p2;
reg   [4:0] i_4_reg_716;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_94;
wire   [12:0] tmp_44_fu_316_p2;
reg   [12:0] tmp_44_reg_721;
wire   [0:0] exitcond7_fu_275_p2;
wire   [4:0] j_4_fu_328_p2;
reg   [4:0] j_4_reg_729;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_108;
wire   [12:0] tmp_50_fu_338_p2;
reg   [12:0] tmp_50_reg_734;
wire   [0:0] exitcond6_fu_322_p2;
wire   [3:0] filt_5_fu_353_p2;
reg   [3:0] filt_5_reg_742;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_122;
wire  signed [7:0] tmp_49_cast_fu_385_p1;
reg  signed [7:0] tmp_49_cast_reg_747;
wire   [0:0] exitcond5_fu_347_p2;
wire   [8:0] tmp_42_fu_401_p2;
reg   [8:0] tmp_42_reg_752;
wire   [1:0] ch_3_fu_413_p2;
reg   [1:0] ch_3_reg_760;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_138;
wire  signed [8:0] tmp_59_cast_fu_453_p1;
reg  signed [8:0] tmp_59_cast_reg_765;
wire   [0:0] exitcond4_fu_407_p2;
wire   [63:0] tmp_49_fu_478_p2;
reg   [63:0] tmp_49_reg_770;
wire   [4:0] i_5_fu_490_p2;
reg   [4:0] i_5_reg_778;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_154;
wire   [12:0] tmp_53_fu_525_p2;
reg   [12:0] tmp_53_reg_783;
wire   [0:0] exitcond3_fu_484_p2;
wire   [4:0] j_5_fu_537_p2;
reg   [4:0] j_5_reg_791;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_168;
reg   [11:0] feature_map_addr_1_reg_796;
wire   [0:0] exitcond2_fu_531_p2;
wire   [2:0] lt_i_1_fu_567_p2;
reg   [2:0] lt_i_1_reg_804;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_182;
wire   [10:0] tmp_58_fu_604_p2;
reg   [10:0] tmp_58_reg_809;
wire   [0:0] exitcond1_fu_561_p2;
wire   [11:0] tmp_61_fu_639_p2;
reg   [11:0] tmp_61_reg_814;
wire   [2:0] lt_j_1_fu_655_p2;
reg   [2:0] lt_j_1_reg_822;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_198;
wire   [0:0] exitcond_fu_649_p2;
wire   [31:0] grp_fu_222_p2;
reg   [31:0] tmp_28_reg_847;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_223;
reg   [31:0] feature_map_load_reg_852;
wire   [31:0] grp_fu_218_p2;
reg   [31:0] tmp_29_reg_857;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_233;
reg   [3:0] filt_reg_117;
reg   [4:0] i_reg_128;
reg   [4:0] j_reg_139;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_255;
reg   [3:0] filt1_reg_150;
reg   [1:0] ch_reg_161;
reg   [4:0] i2_reg_172;
reg   [4:0] j3_reg_184;
reg   [2:0] lt_i_reg_196;
reg   [2:0] lt_j_reg_207;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_288;
wire   [63:0] tmp_fu_240_p1;
wire   [63:0] tmp_63_cast_fu_343_p1;
wire   [63:0] tmp_68_cast_fu_552_p1;
wire   [63:0] tmp_76_cast_fu_670_p1;
wire   [63:0] tmp_77_cast_fu_690_p1;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_301;
wire   [7:0] tmp_s_fu_245_p3;
wire   [5:0] tmp_37_fu_257_p3;
wire   [8:0] p_shl1_cast_fu_265_p1;
wire   [8:0] p_shl_cast_fu_253_p1;
wire   [8:0] tmp_17_cast_fu_287_p1;
wire   [8:0] tmp_43_fu_291_p2;
wire   [10:0] tmp_35_fu_304_p3;
wire   [12:0] p_shl2_cast_fu_296_p3;
wire   [12:0] p_shl3_cast_fu_312_p1;
wire   [12:0] tmp_19_cast_fu_334_p1;
wire   [5:0] tmp_39_fu_363_p3;
wire   [6:0] p_shl6_cast_fu_375_p1;
wire   [6:0] tmp_cast_fu_359_p1;
wire   [6:0] tmp_40_fu_379_p2;
wire   [7:0] tmp_41_fu_389_p3;
wire   [8:0] p_shl6_cast1_fu_371_p1;
wire   [8:0] p_shl4_cast_fu_397_p1;
wire   [6:0] tmp_45_fu_423_p3;
wire   [4:0] tmp_46_fu_435_p3;
wire   [7:0] p_shl8_cast_fu_431_p1;
wire   [7:0] p_shl9_cast_fu_443_p1;
wire   [7:0] tmp_47_fu_447_p2;
wire   [7:0] tmp_18_cast_fu_419_p1;
wire   [7:0] tmp_48_fu_457_p2;
wire   [9:0] tmp_36_fu_466_p3;
wire  signed [63:0] tmp_60_cast_fu_462_p1;
wire  signed [63:0] p_shl7_fu_474_p1;
wire   [8:0] tmp_20_cast_fu_496_p1;
wire   [8:0] tmp_51_fu_500_p2;
wire   [10:0] tmp_52_fu_513_p3;
wire   [12:0] p_shl10_cast_fu_505_p3;
wire   [12:0] p_shl11_cast_fu_521_p1;
wire   [12:0] tmp_21_cast_fu_543_p1;
wire   [12:0] tmp_54_fu_547_p2;
wire   [4:0] lt_i_cast4_fu_557_p1;
wire   [63:0] tmp_23_fu_579_p1;
wire   [63:0] tmp_55_fu_583_p2;
wire   [8:0] tmp_57_fu_592_p1;
wire   [10:0] p_shl14_cast_fu_596_p3;
wire   [10:0] tmp_56_fu_588_p1;
wire   [4:0] tmp_22_fu_573_p2;
wire   [8:0] tmp_24_cast_fu_610_p1;
wire   [8:0] tmp_59_fu_614_p2;
wire   [6:0] tmp_60_fu_619_p1;
wire   [11:0] p_shl12_cast_fu_623_p3;
wire   [11:0] p_shl13_cast_fu_631_p3;
wire   [10:0] tmp_25_cast_fu_661_p1;
wire   [10:0] tmp_62_fu_665_p2;
wire   [4:0] lt_j_cast2_fu_645_p1;
wire   [4:0] tmp_26_fu_675_p2;
wire   [11:0] tmp_27_cast_fu_681_p1;
wire   [11:0] tmp_63_fu_685_p2;
wire    grp_fu_218_ce;
wire    grp_fu_222_ce;
reg   [20:0] ap_NS_fsm;


Conv_Accel_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_Accel_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( feature_map_load_reg_852 ),
    .din1( tmp_28_reg_847 ),
    .ce( grp_fu_218_ce ),
    .dout( grp_fu_218_p2 )
);

Conv_Accel_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_Accel_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( filter_q0 ),
    .din1( image_r_q0 ),
    .ce( grp_fu_222_ce ),
    .dout( grp_fu_222_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == exitcond3_fu_484_p2))) begin
        ch_reg_161 <= ch_3_reg_760;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond5_fu_347_p2))) begin
        ch_reg_161 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == exitcond4_fu_407_p2))) begin
        filt1_reg_150 <= filt_5_reg_742;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond8_fu_228_p2 == ap_const_lv1_0))) begin
        filt1_reg_150 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond7_fu_275_p2))) begin
        filt_reg_117 <= filt_4_reg_698;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        filt_reg_117 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond2_fu_531_p2))) begin
        i2_reg_172 <= i_5_reg_778;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == exitcond4_fu_407_p2))) begin
        i2_reg_172 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond6_fu_322_p2))) begin
        i_reg_128 <= i_4_reg_716;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond8_fu_228_p2 == ap_const_lv1_0))) begin
        i_reg_128 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond1_fu_561_p2))) begin
        j3_reg_184 <= j_5_reg_791;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == exitcond3_fu_484_p2))) begin
        j3_reg_184 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond7_fu_275_p2))) begin
        j_reg_139 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_reg_139 <= j_4_reg_729;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == exitcond_fu_649_p2))) begin
        lt_i_reg_196 <= lt_i_1_reg_804;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & (ap_const_lv1_0 == exitcond2_fu_531_p2))) begin
        lt_i_reg_196 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == exitcond1_fu_561_p2))) begin
        lt_j_reg_207 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        lt_j_reg_207 <= lt_j_1_reg_822;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond8_fu_228_p2 == ap_const_lv1_0))) begin
        bias_addr_reg_708 <= tmp_fu_240_p1;
        tmp_38_reg_703[8 : 2] <= tmp_38_fu_269_p2[8 : 2];
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        ch_3_reg_760 <= ch_3_fu_413_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & (ap_const_lv1_0 == exitcond2_fu_531_p2))) begin
        feature_map_addr_1_reg_796 <= tmp_68_cast_fu_552_p1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        feature_map_load_reg_852 <= feature_map_q0;
        tmp_28_reg_847 <= grp_fu_222_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        filt_4_reg_698 <= filt_4_fu_234_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        filt_5_reg_742 <= filt_5_fu_353_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_4_reg_716 <= i_4_fu_281_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        i_5_reg_778 <= i_5_fu_490_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_4_reg_729 <= j_4_fu_328_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        j_5_reg_791 <= j_5_fu_537_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        lt_i_1_reg_804 <= lt_i_1_fu_567_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        lt_j_1_reg_822 <= lt_j_1_fu_655_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        tmp_29_reg_857 <= grp_fu_218_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond5_fu_347_p2))) begin
        tmp_42_reg_752[8 : 2] <= tmp_42_fu_401_p2[8 : 2];
        tmp_49_cast_reg_747 <= tmp_49_cast_fu_385_p1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond7_fu_275_p2))) begin
        tmp_44_reg_721[12 : 2] <= tmp_44_fu_316_p2[12 : 2];
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == exitcond4_fu_407_p2))) begin
        tmp_49_reg_770 <= tmp_49_fu_478_p2;
        tmp_59_cast_reg_765[8 : 3] <= tmp_59_cast_fu_453_p1[8 : 3];
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond6_fu_322_p2))) begin
        tmp_50_reg_734 <= tmp_50_fu_338_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == exitcond3_fu_484_p2))) begin
        tmp_53_reg_783[12 : 2] <= tmp_53_fu_525_p2[12 : 2];
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == exitcond1_fu_561_p2))) begin
        tmp_58_reg_809 <= tmp_58_fu_604_p2;
        tmp_61_reg_814[11 : 3] <= tmp_61_fu_639_p2[11 : 3];
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st6_fsm_5 or exitcond5_fu_347_p2) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond5_fu_347_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or exitcond5_fu_347_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond5_fu_347_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_182) begin
    if (ap_sig_bdd_182) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_198) begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_301) begin
    if (ap_sig_bdd_301) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_223) begin
    if (ap_sig_bdd_223) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_39) begin
    if (ap_sig_bdd_39) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_233) begin
    if (ap_sig_bdd_233) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_288) begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_77) begin
    if (ap_sig_bdd_77) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_94) begin
    if (ap_sig_bdd_94) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_108) begin
    if (ap_sig_bdd_108) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_255) begin
    if (ap_sig_bdd_255) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_122) begin
    if (ap_sig_bdd_122) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_138) begin
    if (ap_sig_bdd_138) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_154) begin
    if (ap_sig_bdd_154) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_168) begin
    if (ap_sig_bdd_168) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        bias_ce0 = ap_const_logic_1;
    end else begin
        bias_ce0 = ap_const_logic_0;
    end
end

/// feature_map_address0 assign process. ///
always @ (feature_map_addr_1_reg_796 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st21_fsm_20 or tmp_63_cast_fu_343_p1 or ap_sig_cseq_ST_st14_fsm_13) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        feature_map_address0 = tmp_63_cast_fu_343_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        feature_map_address0 = feature_map_addr_1_reg_796;
    end else begin
        feature_map_address0 = 'bx;
    end
end

/// feature_map_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st14_fsm_13) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        feature_map_ce0 = ap_const_logic_1;
    end else begin
        feature_map_ce0 = ap_const_logic_0;
    end
end

/// feature_map_d0 assign process. ///
always @ (bias_q0 or tmp_29_reg_857 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st21_fsm_20) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        feature_map_d0 = tmp_29_reg_857;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        feature_map_d0 = bias_q0;
    end else begin
        feature_map_d0 = 'bx;
    end
end

/// feature_map_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st21_fsm_20) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        feature_map_we0 = ap_const_logic_1;
    end else begin
        feature_map_we0 = ap_const_logic_0;
    end
end

/// filter_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        filter_ce0 = ap_const_logic_1;
    end else begin
        filter_ce0 = ap_const_logic_0;
    end
end

/// image_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        image_r_ce0 = ap_const_logic_1;
    end else begin
        image_r_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond8_fu_228_p2 or exitcond7_fu_275_p2 or exitcond6_fu_322_p2 or exitcond5_fu_347_p2 or exitcond4_fu_407_p2 or exitcond3_fu_484_p2 or exitcond2_fu_531_p2 or exitcond1_fu_561_p2 or exitcond_fu_649_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((exitcond8_fu_228_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond7_fu_275_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond6_fu_322_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond5_fu_347_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == exitcond4_fu_407_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_484_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            if ((ap_const_lv1_0 == exitcond2_fu_531_p2)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st10_fsm_9 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_561_p2)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st11_fsm_10 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_649_p2)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_108 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_108 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_122 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_138 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_138 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_154 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_154 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_168 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_182 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_182 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_198 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_223 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_223 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_233 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_233 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_255 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_255 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_288 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_301 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_301 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_39 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_39 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_77 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_77 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_94 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_94 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end
assign bias_address0 = bias_addr_reg_708;
assign ch_3_fu_413_p2 = (ch_reg_161 + ap_const_lv2_1);
assign exitcond1_fu_561_p2 = (lt_i_reg_196 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond2_fu_531_p2 = (j3_reg_184 == ap_const_lv5_14? 1'b1: 1'b0);
assign exitcond3_fu_484_p2 = (i2_reg_172 == ap_const_lv5_14? 1'b1: 1'b0);
assign exitcond4_fu_407_p2 = (ch_reg_161 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond5_fu_347_p2 = (filt1_reg_150 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond6_fu_322_p2 = (j_reg_139 == ap_const_lv5_14? 1'b1: 1'b0);
assign exitcond7_fu_275_p2 = (i_reg_128 == ap_const_lv5_14? 1'b1: 1'b0);
assign exitcond8_fu_228_p2 = (filt_reg_117 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond_fu_649_p2 = (lt_j_reg_207 == ap_const_lv3_5? 1'b1: 1'b0);
assign filt_4_fu_234_p2 = (filt_reg_117 + ap_const_lv4_1);
assign filt_5_fu_353_p2 = (filt1_reg_150 + ap_const_lv4_1);
assign filter_address0 = tmp_76_cast_fu_670_p1;
assign grp_fu_218_ce = ap_const_logic_1;
assign grp_fu_222_ce = ap_const_logic_1;
assign i_4_fu_281_p2 = (i_reg_128 + ap_const_lv5_1);
assign i_5_fu_490_p2 = (i2_reg_172 + ap_const_lv5_1);
assign image_r_address0 = tmp_77_cast_fu_690_p1;
assign j_4_fu_328_p2 = (j_reg_139 + ap_const_lv5_1);
assign j_5_fu_537_p2 = (j3_reg_184 + ap_const_lv5_1);
assign lt_i_1_fu_567_p2 = (lt_i_reg_196 + ap_const_lv3_1);
assign lt_i_cast4_fu_557_p1 = lt_i_reg_196;
assign lt_j_1_fu_655_p2 = (lt_j_reg_207 + ap_const_lv3_1);
assign lt_j_cast2_fu_645_p1 = lt_j_reg_207;
assign p_shl10_cast_fu_505_p3 = {{tmp_51_fu_500_p2}, {ap_const_lv4_0}};
assign p_shl11_cast_fu_521_p1 = tmp_52_fu_513_p3;
assign p_shl12_cast_fu_623_p3 = {{tmp_60_fu_619_p1}, {ap_const_lv5_0}};
assign p_shl13_cast_fu_631_p3 = {{tmp_59_fu_614_p2}, {ap_const_lv3_0}};
assign p_shl14_cast_fu_596_p3 = {{tmp_57_fu_592_p1}, {ap_const_lv2_0}};
assign p_shl1_cast_fu_265_p1 = tmp_37_fu_257_p3;
assign p_shl2_cast_fu_296_p3 = {{tmp_43_fu_291_p2}, {ap_const_lv4_0}};
assign p_shl3_cast_fu_312_p1 = tmp_35_fu_304_p3;
assign p_shl4_cast_fu_397_p1 = tmp_41_fu_389_p3;
assign p_shl6_cast1_fu_371_p1 = tmp_39_fu_363_p3;
assign p_shl6_cast_fu_375_p1 = tmp_39_fu_363_p3;
assign p_shl7_fu_474_p1 = $signed(tmp_36_fu_466_p3);
assign p_shl8_cast_fu_431_p1 = tmp_45_fu_423_p3;
assign p_shl9_cast_fu_443_p1 = tmp_46_fu_435_p3;
assign p_shl_cast_fu_253_p1 = tmp_s_fu_245_p3;
assign tmp_17_cast_fu_287_p1 = i_reg_128;
assign tmp_18_cast_fu_419_p1 = ch_reg_161;
assign tmp_19_cast_fu_334_p1 = j_reg_139;
assign tmp_20_cast_fu_496_p1 = i2_reg_172;
assign tmp_21_cast_fu_543_p1 = j3_reg_184;
assign tmp_22_fu_573_p2 = (i2_reg_172 + lt_i_cast4_fu_557_p1);
assign tmp_23_fu_579_p1 = lt_i_reg_196;
assign tmp_24_cast_fu_610_p1 = tmp_22_fu_573_p2;
assign tmp_25_cast_fu_661_p1 = lt_j_reg_207;
assign tmp_26_fu_675_p2 = (lt_j_cast2_fu_645_p1 + j3_reg_184);
assign tmp_27_cast_fu_681_p1 = tmp_26_fu_675_p2;
assign tmp_35_fu_304_p3 = {{tmp_43_fu_291_p2}, {ap_const_lv2_0}};
assign tmp_36_fu_466_p3 = {{tmp_48_fu_457_p2}, {ap_const_lv2_0}};
assign tmp_37_fu_257_p3 = {{filt_reg_117}, {ap_const_lv2_0}};
assign tmp_38_fu_269_p2 = (p_shl1_cast_fu_265_p1 + p_shl_cast_fu_253_p1);
assign tmp_39_fu_363_p3 = {{filt1_reg_150}, {ap_const_lv2_0}};
assign tmp_40_fu_379_p2 = (p_shl6_cast_fu_375_p1 - tmp_cast_fu_359_p1);
assign tmp_41_fu_389_p3 = {{filt1_reg_150}, {ap_const_lv4_0}};
assign tmp_42_fu_401_p2 = (p_shl6_cast1_fu_371_p1 + p_shl4_cast_fu_397_p1);
assign tmp_43_fu_291_p2 = (tmp_17_cast_fu_287_p1 + tmp_38_reg_703);
assign tmp_44_fu_316_p2 = (p_shl2_cast_fu_296_p3 + p_shl3_cast_fu_312_p1);
assign tmp_45_fu_423_p3 = {{ch_reg_161}, {ap_const_lv5_0}};
assign tmp_46_fu_435_p3 = {{ch_reg_161}, {ap_const_lv3_0}};
assign tmp_47_fu_447_p2 = (p_shl8_cast_fu_431_p1 - p_shl9_cast_fu_443_p1);
assign tmp_48_fu_457_p2 = ($signed(tmp_49_cast_reg_747) + $signed(tmp_18_cast_fu_419_p1));
assign tmp_49_cast_fu_385_p1 = $signed(tmp_40_fu_379_p2);
assign tmp_49_fu_478_p2 = ($signed(tmp_60_cast_fu_462_p1) + $signed(p_shl7_fu_474_p1));
assign tmp_50_fu_338_p2 = (tmp_44_reg_721 + tmp_19_cast_fu_334_p1);
assign tmp_51_fu_500_p2 = (tmp_20_cast_fu_496_p1 + tmp_42_reg_752);
assign tmp_52_fu_513_p3 = {{tmp_51_fu_500_p2}, {ap_const_lv2_0}};
assign tmp_53_fu_525_p2 = (p_shl10_cast_fu_505_p3 + p_shl11_cast_fu_521_p1);
assign tmp_54_fu_547_p2 = (tmp_53_reg_783 + tmp_21_cast_fu_543_p1);
assign tmp_55_fu_583_p2 = (tmp_23_fu_579_p1 + tmp_49_reg_770);
assign tmp_56_fu_588_p1 = tmp_55_fu_583_p2[10:0];
assign tmp_57_fu_592_p1 = tmp_55_fu_583_p2[8:0];
assign tmp_58_fu_604_p2 = (p_shl14_cast_fu_596_p3 + tmp_56_fu_588_p1);
assign tmp_59_cast_fu_453_p1 = $signed(tmp_47_fu_447_p2);
assign tmp_59_fu_614_p2 = ($signed(tmp_24_cast_fu_610_p1) + $signed(tmp_59_cast_reg_765));
assign tmp_60_cast_fu_462_p1 = $signed(tmp_48_fu_457_p2);
assign tmp_60_fu_619_p1 = tmp_59_fu_614_p2[6:0];
assign tmp_61_fu_639_p2 = (p_shl12_cast_fu_623_p3 - p_shl13_cast_fu_631_p3);
assign tmp_62_fu_665_p2 = (tmp_58_reg_809 + tmp_25_cast_fu_661_p1);
assign tmp_63_cast_fu_343_p1 = tmp_50_reg_734;
assign tmp_63_fu_685_p2 = (tmp_61_reg_814 + tmp_27_cast_fu_681_p1);
assign tmp_68_cast_fu_552_p1 = tmp_54_fu_547_p2;
assign tmp_76_cast_fu_670_p1 = tmp_62_fu_665_p2;
assign tmp_77_cast_fu_690_p1 = tmp_63_fu_685_p2;
assign tmp_cast_fu_359_p1 = filt1_reg_150;
assign tmp_fu_240_p1 = filt_reg_117;
assign tmp_s_fu_245_p3 = {{filt_reg_117}, {ap_const_lv4_0}};
always @ (posedge ap_clk) begin
    tmp_38_reg_703[1:0] <= 2'b00;
    tmp_44_reg_721[1:0] <= 2'b00;
    tmp_42_reg_752[1:0] <= 2'b00;
    tmp_59_cast_reg_765[2:0] <= 3'b000;
    tmp_53_reg_783[1:0] <= 2'b00;
    tmp_61_reg_814[2:0] <= 3'b000;
end



endmodule //Conv_Accel_conv_hw_24_3_10_5_20_s

