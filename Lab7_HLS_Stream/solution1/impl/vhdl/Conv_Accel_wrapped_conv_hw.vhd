-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv_Accel_wrapped_conv_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of Conv_Accel_wrapped_conv_hw is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_pp1_stg0_fsm_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_st8_fsm_3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_st9_fsm_4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_st10_fsm_5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_pp3_stg0_fsm_6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_st15_fsm_7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv11_6C0 : STD_LOGIC_VECTOR (10 downto 0) := "11011000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv10_240 : STD_LOGIC_VECTOR (9 downto 0) := "1001000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_2EE : STD_LOGIC_VECTOR (9 downto 0) := "1011101110";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv12_FA0 : STD_LOGIC_VECTOR (11 downto 0) := "111110100000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv10_190 : STD_LOGIC_VECTOR (9 downto 0) := "0110010000";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv12_190 : STD_LOGIC_VECTOR (11 downto 0) := "000110010000";
    constant ap_const_lv12_F9F : STD_LOGIC_VECTOR (11 downto 0) := "111110011111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_26 : BOOLEAN;
    signal indvar_flatten1_reg_268 : STD_LOGIC_VECTOR (10 downto 0);
    signal ch_reg_279 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_291 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_302 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_314 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten2_reg_326 : STD_LOGIC_VECTOR (9 downto 0);
    signal filt_reg_337 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten3_reg_348 : STD_LOGIC_VECTOR (6 downto 0);
    signal ch1_reg_359 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten4_reg_370 : STD_LOGIC_VECTOR (5 downto 0);
    signal i2_reg_381 : STD_LOGIC_VECTOR (2 downto 0);
    signal j3_reg_393 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten5_reg_416 : STD_LOGIC_VECTOR (11 downto 0);
    signal filt5_reg_427 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten6_reg_439 : STD_LOGIC_VECTOR (9 downto 0);
    signal i6_reg_450 : STD_LOGIC_VECTOR (4 downto 0);
    signal j7_reg_462 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_90 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond_flatten1_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_100 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppstg_reg_486_pp0_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_reg_486_pp1_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_118 : BOOLEAN;
    signal exitcond_flatten4_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_123 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal exitcond_flatten1_reg_1230 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_fu_496_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_flatten_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1239 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_514_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ch_mid2_fu_552_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ch_mid2_reg_1252 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_583_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_reg_1257 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_mid2_fu_600_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_1262 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_mid2_fu_608_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_mid2_reg_1267 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_fu_616_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_1273 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten4_reg_1278 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten4_reg_1278_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next4_fu_685_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_flatten2_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten2_reg_1287 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten24_mid_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten24_mid_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal filt_mid2_fu_741_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal filt_mid2_reg_1297 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_18_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_mid1_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_mid1_reg_1307 : STD_LOGIC_VECTOR (0 downto 0);
    signal ch1_mid2_fu_805_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ch1_mid2_reg_1313 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_817_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_1318 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_next2_fu_829_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next3_fu_843_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_mid2_fu_901_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal i2_mid2_reg_1334 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_fu_944_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_reg_1339 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_2_fu_950_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal filt_1_fu_971_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_204 : BOOLEAN;
    signal exitcond3_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_209 : BOOLEAN;
    signal exitcond_flatten6_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten6_reg_1357 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp3_stg0_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_219 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it2 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_OUTPUT_STREAM_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp3_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next6_fu_993_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond_flatten5_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1366 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next5_fu_1011_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal filt5_mid2_fu_1049_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal filt5_mid2_reg_1379 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_1060_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_reg_1384 : STD_LOGIC_VECTOR (11 downto 0);
    signal j7_mid2_fu_1107_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j7_mid2_reg_1389 : STD_LOGIC_VECTOR (4 downto 0);
    signal i6_mid2_fu_1115_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i6_mid2_reg_1395 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_33_fu_1127_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_reg_1402 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_3_fu_1133_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_3_reg_1408 : STD_LOGIC_VECTOR (4 downto 0);
    signal last_assign_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_assign_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_288 : BOOLEAN;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done : STD_LOGIC;
    signal image_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal image_ce0 : STD_LOGIC;
    signal image_we0 : STD_LOGIC;
    signal image_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal image_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal filter_ce0 : STD_LOGIC;
    signal filter_we0 : STD_LOGIC;
    signal filter_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bias_ce0 : STD_LOGIC;
    signal bias_we0 : STD_LOGIC;
    signal bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_map_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal feature_map_ce0 : STD_LOGIC;
    signal feature_map_we0 : STD_LOGIC;
    signal feature_map_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_map_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_idle : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_ready : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_ce0 : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_ce0 : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_ce0 : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_ce0 : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_we0 : STD_LOGIC;
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ch_phi_fu_283_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_phi_fu_306_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_318_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal filt_phi_fu_341_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ch1_phi_fu_363_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i2_phi_fu_385_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j3_phi_fu_397_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal filt4_reg_405 : STD_LOGIC_VECTOR (3 downto 0);
    signal filt5_phi_fu_431_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal i6_phi_fu_454_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j7_phi_fu_466_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st9_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_405 : BOOLEAN;
    signal tmp_23_cast_fu_674_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_cast_fu_961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_cast_fu_1214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_OUTPUT_STREAM_TREADY : STD_LOGIC := '0';
    signal indvar_flatten_op_fu_508_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ch_1_fu_522_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_559_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_fu_571_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl1_cast_fu_567_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_cast_fu_579_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_mid_fu_528_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond8_mid_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_589_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_cast_fu_625_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_cast_fu_622_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_628_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_634_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_638_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl3_cast_fu_646_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_cast_fu_665_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_654_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_668_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond1_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten1_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal filt_2_fu_691_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_753_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl4_cast_fu_761_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_cast_fu_749_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_765_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ch1_mid_fu_703_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_flatten24_not_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_mid_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten24_mid_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ch_2_fu_775_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_fu_813_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_cast_fu_771_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten22_op_fu_823_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten36_op_fu_837_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_fu_861_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl7_fu_868_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_858_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i2_mid_fu_851_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_878_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_908_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_872_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_912_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_922_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl8_cast_fu_926_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_918_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal j3_mid2_fu_893_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_cast_fu_940_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_27_fu_934_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten66_op_fu_1005_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond2_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten2_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal filt_3_fu_1019_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_1060_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_29_fu_1066_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_1078_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl9_cast_fu_1074_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl10_cast_fu_1086_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal i6_mid_fu_1025_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_mid_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_1096_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_cast_fu_1123_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_fu_1090_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl6_fu_1146_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_34_fu_1164_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl11_cast_fu_1157_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl12_cast_fu_1171_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl5_fu_1139_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl6_cast_fu_1153_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_1181_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j7_cast3_fu_1191_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_fu_1194_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_cast_fu_1187_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_16_cast_fu_1205_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_35_fu_1175_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_36_fu_1208_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_15_fu_1199_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_931 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1060_p00 : STD_LOGIC_VECTOR (11 downto 0);

    component Conv_Accel_conv_hw_24_3_10_5_20_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        image_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        image_r_ce0 : OUT STD_LOGIC;
        image_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        filter_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        filter_ce0 : OUT STD_LOGIC;
        filter_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bias_ce0 : OUT STD_LOGIC;
        bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        feature_map_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        feature_map_ce0 : OUT STD_LOGIC;
        feature_map_we0 : OUT STD_LOGIC;
        feature_map_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        feature_map_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_Accel_wrapped_conv_hw_image IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_Accel_wrapped_conv_hw_filter IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_Accel_wrapped_conv_hw_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv_Accel_wrapped_conv_hw_feature_map IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    image_U : component Conv_Accel_wrapped_conv_hw_image
    generic map (
        DataWidth => 32,
        AddressRange => 1728,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => image_address0,
        ce0 => image_ce0,
        we0 => image_we0,
        d0 => image_d0,
        q0 => image_q0);

    filter_U : component Conv_Accel_wrapped_conv_hw_filter
    generic map (
        DataWidth => 32,
        AddressRange => 750,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => filter_address0,
        ce0 => filter_ce0,
        we0 => filter_we0,
        d0 => filter_d0,
        q0 => filter_q0);

    bias_U : component Conv_Accel_wrapped_conv_hw_bias
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_address0,
        ce0 => bias_ce0,
        we0 => bias_we0,
        d0 => bias_d0,
        q0 => bias_q0);

    feature_map_U : component Conv_Accel_wrapped_conv_hw_feature_map
    generic map (
        DataWidth => 32,
        AddressRange => 4000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => feature_map_address0,
        ce0 => feature_map_ce0,
        we0 => feature_map_we0,
        d0 => feature_map_d0,
        q0 => feature_map_q0);

    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474 : component Conv_Accel_conv_hw_24_3_10_5_20_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start,
        ap_done => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done,
        ap_idle => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_idle,
        ap_ready => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_ready,
        image_r_address0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_address0,
        image_r_ce0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_ce0,
        image_r_q0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_q0,
        filter_address0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_address0,
        filter_ce0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_ce0,
        filter_q0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_q0,
        bias_address0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_address0,
        bias_ce0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_ce0,
        bias_q0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_q0,
        feature_map_address0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_address0,
        feature_map_ce0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_ce0,
        feature_map_we0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_we0,
        feature_map_d0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_d0,
        feature_map_q0 => grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_q0);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_OUTPUT_STREAM_TREADY assign process. --
    ap_reg_ioackin_OUTPUT_STREAM_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3)))))) then 
                    ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3) and (ap_const_logic_1 = OUTPUT_STREAM_TREADY)))) then 
                    ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten1_fu_490_p2 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and not((ap_const_lv1_0 = exitcond_flatten4_fu_679_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and not((ap_const_lv1_0 = exitcond_flatten4_fu_679_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it0 assign process. --
    ap_reg_ppiten_pp3_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and not((ap_const_lv1_0 = exitcond_flatten6_fu_987_p2)))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it1 assign process. --
    ap_reg_ppiten_pp3_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = exitcond_flatten6_fu_987_p2))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and not((ap_const_lv1_0 = exitcond_flatten6_fu_987_p2))))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it2 assign process. --
    ap_reg_ppiten_pp3_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3)))) then 
                    ap_reg_ppiten_pp3_it2 <= ap_reg_ppiten_pp3_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it3 assign process. --
    ap_reg_ppiten_pp3_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it3 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3)))) then 
                    ap_reg_ppiten_pp3_it3 <= ap_reg_ppiten_pp3_it2;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)))) then 
                    ap_reg_ppiten_pp3_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start_ap_start_reg assign process. --
    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_4)) then 
                    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_ready)) then 
                    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ch1_reg_359 assign process. --
    ch1_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                ch1_reg_359 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then 
                ch1_reg_359 <= ch1_mid2_reg_1313;
            end if; 
        end if;
    end process;

    -- ch_reg_279 assign process. --
    ch_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1))) then 
                ch_reg_279 <= ch_mid2_reg_1252;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                ch_reg_279 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- filt4_reg_405 assign process. --
    filt4_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and not((ap_const_lv1_0 = exitcond_flatten4_fu_679_p2)))) then 
                filt4_reg_405 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_3) and (ap_const_lv1_0 = exitcond3_fu_965_p2) and not(ap_sig_bdd_209))) then 
                filt4_reg_405 <= filt_1_fu_971_p2;
            end if; 
        end if;
    end process;

    -- filt5_reg_427 assign process. --
    filt5_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1))) then 
                filt5_reg_427 <= filt5_mid2_reg_1379;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)))) then 
                filt5_reg_427 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- filt_reg_337 assign process. --
    filt_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                filt_reg_337 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then 
                filt_reg_337 <= filt_mid2_reg_1297;
            end if; 
        end if;
    end process;

    -- i2_reg_381 assign process. --
    i2_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                i2_reg_381 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten4_reg_1278_pp1_it1))) then 
                i2_reg_381 <= i2_mid2_reg_1334;
            end if; 
        end if;
    end process;

    -- i6_reg_450 assign process. --
    i6_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1))) then 
                i6_reg_450 <= i6_mid2_reg_1395;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)))) then 
                i6_reg_450 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    -- i_reg_302 assign process. --
    i_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1))) then 
                i_reg_302 <= i_mid2_reg_1267;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_302 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten1_reg_268 assign process. --
    indvar_flatten1_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten1_fu_490_p2 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)))) then 
                indvar_flatten1_reg_268 <= indvar_flatten_next1_fu_496_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten1_reg_268 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten2_reg_326 assign process. --
    indvar_flatten2_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                indvar_flatten2_reg_326 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
                indvar_flatten2_reg_326 <= indvar_flatten_next4_fu_685_p2;
            end if; 
        end if;
    end process;

    -- indvar_flatten3_reg_348 assign process. --
    indvar_flatten3_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                indvar_flatten3_reg_348 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
                indvar_flatten3_reg_348 <= indvar_flatten_next3_fu_843_p3;
            end if; 
        end if;
    end process;

    -- indvar_flatten4_reg_370 assign process. --
    indvar_flatten4_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                indvar_flatten4_reg_370 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
                indvar_flatten4_reg_370 <= indvar_flatten_next2_fu_829_p3;
            end if; 
        end if;
    end process;

    -- indvar_flatten5_reg_416 assign process. --
    indvar_flatten5_reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = exitcond_flatten6_fu_987_p2))) then 
                indvar_flatten5_reg_416 <= indvar_flatten_next6_fu_993_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)))) then 
                indvar_flatten5_reg_416 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten6_reg_439 assign process. --
    indvar_flatten6_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = exitcond_flatten6_fu_987_p2))) then 
                indvar_flatten6_reg_439 <= indvar_flatten_next5_fu_1011_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)))) then 
                indvar_flatten6_reg_439 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_reg_291 assign process. --
    indvar_flatten_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten1_fu_490_p2 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)))) then 
                indvar_flatten_reg_291 <= indvar_flatten_next_fu_514_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_291 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- j3_reg_393 assign process. --
    j3_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)))) then 
                j3_reg_393 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then 
                j3_reg_393 <= j_2_fu_950_p2;
            end if; 
        end if;
    end process;

    -- j7_reg_462 assign process. --
    j7_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1))) then 
                j7_reg_462 <= j_3_reg_1408;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5) and not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)))) then 
                j7_reg_462 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    -- j_reg_314 assign process. --
    j_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1))) then 
                j_reg_314 <= j_1_reg_1273;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_314 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)))) then
                ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1 <= exitcond_flatten1_reg_1230;
                ap_reg_ppstg_reg_486_pp0_it1 <= reg_486;
                exitcond_flatten1_reg_1230 <= exitcond_flatten1_fu_490_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then
                ap_reg_ppstg_exitcond_flatten4_reg_1278_pp1_it1 <= exitcond_flatten4_reg_1278;
                ap_reg_ppstg_reg_486_pp1_it1 <= reg_486;
                exitcond_flatten4_reg_1278 <= exitcond_flatten4_fu_679_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))))) then
                ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1 <= exitcond_flatten6_reg_1357;
                exitcond_flatten6_reg_1357 <= exitcond_flatten6_fu_987_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3)))) then
                ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2 <= ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then
                ch1_mid2_reg_1313 <= ch1_mid2_fu_805_p3;
                filt_mid2_reg_1297 <= filt_mid2_fu_741_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and (ap_const_lv1_0 = exitcond_flatten1_reg_1230))) then
                ch_mid2_reg_1252 <= ch_mid2_fu_552_p3;
                i_mid2_reg_1267 <= i_mid2_fu_608_p3;
                j_1_reg_1273 <= j_1_fu_616_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then
                exitcond4_mid1_reg_1307 <= exitcond4_mid1_fu_799_p2;
                exitcond_flatten24_mid_reg_1292 <= exitcond_flatten24_mid_fu_735_p2;
                exitcond_flatten2_reg_1287 <= exitcond_flatten2_fu_697_p2;
                tmp_18_reg_1302 <= tmp_18_fu_781_p2;
                tmp_19_reg_1318 <= tmp_19_fu_817_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = exitcond_flatten6_fu_987_p2))) then
                exitcond_flatten5_reg_1366 <= exitcond_flatten5_fu_999_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten1_fu_490_p2 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)))) then
                exitcond_flatten_reg_1239 <= exitcond_flatten_fu_502_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = exitcond_flatten6_reg_1357))) then
                filt5_mid2_reg_1379 <= filt5_mid2_fu_1049_p3;
                i6_mid2_reg_1395 <= i6_mid2_fu_1115_p3;
                j_3_reg_1408 <= j_3_fu_1133_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then
                i2_mid2_reg_1334 <= i2_mid2_fu_901_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_6) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = exitcond_flatten6_reg_1357))) then
                j7_mid2_reg_1389 <= j7_mid2_fu_1107_p3;
                tmp_33_reg_1402 <= tmp_33_fu_1127_p2;
                    tmp_7_reg_1384(11 downto 4) <= tmp_7_fu_1060_p2(11 downto 4);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and (ap_const_lv1_0 = exitcond_flatten1_reg_1230))) then
                j_mid2_reg_1262 <= j_mid2_fu_600_p3;
                    tmp_3_reg_1257(7 downto 3) <= tmp_3_fu_583_p2(7 downto 3);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1))) then
                last_assign_reg_1418 <= last_assign_fu_1219_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten1_fu_490_p2 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)))))) then
                reg_486 <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then
                tmp_28_reg_1339 <= tmp_28_fu_944_p2;
            end if;
        end if;
    end process;
    tmp_3_reg_1257(2 downto 0) <= "000";
    tmp_7_reg_1384(3 downto 0) <= "0000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, exitcond_flatten1_fu_490_p2, ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond_flatten4_fu_679_p2, ap_sig_bdd_123, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, exitcond3_fu_965_p2, ap_sig_bdd_209, exitcond_flatten6_fu_987_p2, ap_reg_ppiten_pp3_it0, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it2, ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_reg_ppiten_pp3_it3, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and not((exitcond_flatten1_fu_490_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp1_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and not((ap_const_lv1_0 = exitcond_flatten4_fu_679_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and not((ap_const_lv1_0 = exitcond_flatten4_fu_679_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                end if;
            when ap_ST_st8_fsm_3 => 
                if (((ap_const_lv1_0 = exitcond3_fu_965_p2) and not(ap_sig_bdd_209))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_3;
                elsif ((not(ap_sig_bdd_209) and not((ap_const_lv1_0 = exitcond3_fu_965_p2)))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_3;
                end if;
            when ap_ST_st9_fsm_4 => 
                ap_NS_fsm <= ap_ST_st10_fsm_5;
            when ap_ST_st10_fsm_5 => 
                if (not((ap_const_logic_0 = grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_done))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_5;
                end if;
            when ap_ST_pp3_stg0_fsm_6 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it3) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and not((ap_const_lv1_0 = exitcond_flatten6_fu_987_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_6;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it3) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))) and not((ap_const_lv1_0 = exitcond_flatten6_fu_987_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_6;
                end if;
            when ap_ST_st15_fsm_7 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    -- INPUT_STREAM_TREADY assign process. --
    INPUT_STREAM_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, exitcond_flatten1_fu_490_p2, ap_sig_bdd_100, ap_sig_cseq_ST_pp1_stg0_fsm_2, exitcond_flatten4_fu_679_p2, ap_sig_bdd_123, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_st8_fsm_3, exitcond3_fu_965_p2, ap_sig_bdd_209)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten1_fu_490_p2 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_3) and (ap_const_lv1_0 = exitcond3_fu_965_p2) and not(ap_sig_bdd_209)))) then 
            INPUT_STREAM_TREADY <= ap_const_logic_1;
        else 
            INPUT_STREAM_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_TDATA <= feature_map_q0;
    OUTPUT_STREAM_TDEST <= ap_const_lv5_0;
    OUTPUT_STREAM_TID <= ap_const_lv5_0;
    OUTPUT_STREAM_TKEEP <= ap_const_lv4_F;
    OUTPUT_STREAM_TLAST <= last_assign_reg_1418;
    OUTPUT_STREAM_TSTRB <= ap_const_lv4_F;
    OUTPUT_STREAM_TUSER <= ap_const_lv4_0;

    -- OUTPUT_STREAM_TVALID assign process. --
    OUTPUT_STREAM_TVALID_assign_proc : process(ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2, ap_reg_ppiten_pp3_it3, ap_reg_ioackin_OUTPUT_STREAM_TREADY)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3) and (ap_const_logic_0 = ap_reg_ioackin_OUTPUT_STREAM_TREADY)))) then 
            OUTPUT_STREAM_TVALID <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st15_fsm_7)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st15_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_100 assign process. --
    ap_sig_bdd_100_assign_proc : process(INPUT_STREAM_TVALID, exitcond_flatten1_fu_490_p2)
    begin
                ap_sig_bdd_100 <= ((INPUT_STREAM_TVALID = ap_const_logic_0) and (exitcond_flatten1_fu_490_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_118 assign process. --
    ap_sig_bdd_118_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_118 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_123 assign process. --
    ap_sig_bdd_123_assign_proc : process(INPUT_STREAM_TVALID, exitcond_flatten4_fu_679_p2)
    begin
                ap_sig_bdd_123 <= ((INPUT_STREAM_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond_flatten4_fu_679_p2));
    end process;


    -- ap_sig_bdd_204 assign process. --
    ap_sig_bdd_204_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_204 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_209 assign process. --
    ap_sig_bdd_209_assign_proc : process(INPUT_STREAM_TVALID, exitcond3_fu_965_p2)
    begin
                ap_sig_bdd_209 <= ((INPUT_STREAM_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond3_fu_965_p2));
    end process;


    -- ap_sig_bdd_219 assign process. --
    ap_sig_bdd_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_219 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_26 assign process. --
    ap_sig_bdd_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_288 assign process. --
    ap_sig_bdd_288_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_288 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_405 assign process. --
    ap_sig_bdd_405_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_405 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_90 assign process. --
    ap_sig_bdd_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_90 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_931 assign process. --
    ap_sig_bdd_931_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_931 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_90)
    begin
        if (ap_sig_bdd_90) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_2_assign_proc : process(ap_sig_bdd_118)
    begin
        if (ap_sig_bdd_118) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp3_stg0_fsm_6 assign process. --
    ap_sig_cseq_ST_pp3_stg0_fsm_6_assign_proc : process(ap_sig_bdd_219)
    begin
        if (ap_sig_bdd_219) then 
            ap_sig_cseq_ST_pp3_stg0_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp3_stg0_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st10_fsm_5 assign process. --
    ap_sig_cseq_ST_st10_fsm_5_assign_proc : process(ap_sig_bdd_288)
    begin
        if (ap_sig_bdd_288) then 
            ap_sig_cseq_ST_st10_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st15_fsm_7 assign process. --
    ap_sig_cseq_ST_st15_fsm_7_assign_proc : process(ap_sig_bdd_931)
    begin
        if (ap_sig_bdd_931) then 
            ap_sig_cseq_ST_st15_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_26)
    begin
        if (ap_sig_bdd_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_3 assign process. --
    ap_sig_cseq_ST_st8_fsm_3_assign_proc : process(ap_sig_bdd_204)
    begin
        if (ap_sig_bdd_204) then 
            ap_sig_cseq_ST_st8_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_4 assign process. --
    ap_sig_cseq_ST_st9_fsm_4_assign_proc : process(ap_sig_bdd_405)
    begin
        if (ap_sig_bdd_405) then 
            ap_sig_cseq_ST_st9_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_OUTPUT_STREAM_TREADY assign process. --
    ap_sig_ioackin_OUTPUT_STREAM_TREADY_assign_proc : process(OUTPUT_STREAM_TREADY, ap_reg_ioackin_OUTPUT_STREAM_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_OUTPUT_STREAM_TREADY)) then 
            ap_sig_ioackin_OUTPUT_STREAM_TREADY <= OUTPUT_STREAM_TREADY;
        else 
            ap_sig_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- bias_address0 assign process. --
    bias_address0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_3, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_address0, tmp_s_fu_982_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_3)) then 
            bias_address0 <= tmp_s_fu_982_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            bias_address0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_address0;
        else 
            bias_address0 <= "XXXX";
        end if; 
    end process;


    -- bias_ce0 assign process. --
    bias_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_3, ap_sig_bdd_209, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_3) and not(ap_sig_bdd_209))) then 
            bias_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            bias_ce0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_ce0;
        else 
            bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_d0 <= INPUT_STREAM_TDATA;

    -- bias_we0 assign process. --
    bias_we0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_3, exitcond3_fu_965_p2, ap_sig_bdd_209)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_3) and (ap_const_lv1_0 = exitcond3_fu_965_p2) and not(ap_sig_bdd_209)))) then 
            bias_we0 <= ap_const_logic_1;
        else 
            bias_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ch1_mid2_fu_805_p3 <= 
        ch_2_fu_775_p2 when (exitcond_flatten24_mid_fu_735_p2(0) = '1') else 
        ch1_mid_fu_703_p3;
    ch1_mid_fu_703_p3 <= 
        ap_const_lv2_0 when (exitcond_flatten2_fu_697_p2(0) = '1') else 
        ch1_phi_fu_363_p4;

    -- ch1_phi_fu_363_p4 assign process. --
    ch1_phi_fu_363_p4_assign_proc : process(ch1_reg_359, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_reg_ppiten_pp1_it1, exitcond_flatten4_reg_1278, ch1_mid2_reg_1313)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then 
            ch1_phi_fu_363_p4 <= ch1_mid2_reg_1313;
        else 
            ch1_phi_fu_363_p4 <= ch1_reg_359;
        end if; 
    end process;

    ch_1_fu_522_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ch_phi_fu_283_p4));
    ch_2_fu_775_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ch1_mid_fu_703_p3));
    ch_mid2_fu_552_p3 <= 
        ch_1_fu_522_p2 when (exitcond_flatten_reg_1239(0) = '1') else 
        ch_phi_fu_283_p4;

    -- ch_phi_fu_283_p4 assign process. --
    ch_phi_fu_283_p4_assign_proc : process(ch_reg_279, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1, ch_mid2_reg_1252)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1))) then 
            ch_phi_fu_283_p4 <= ch_mid2_reg_1252;
        else 
            ch_phi_fu_283_p4 <= ch_reg_279;
        end if; 
    end process;

    exitcond1_fu_717_p2 <= "1" when (j3_phi_fu_397_p4 = ap_const_lv3_5) else "0";
    exitcond2_fu_1037_p2 <= "1" when (j7_phi_fu_466_p4 = ap_const_lv5_14) else "0";
    exitcond3_fu_965_p2 <= "1" when (filt4_reg_405 = ap_const_lv4_A) else "0";
    exitcond4_mid1_fu_799_p2 <= (exitcond4_mid_fu_723_p2 and not_exitcond_flatten24_mid_fu_793_p2);
    exitcond4_mid_fu_723_p2 <= (exitcond1_fu_717_p2 and not_exitcond_flatten1_fu_711_p2);
    exitcond8_mid_fu_546_p2 <= (exitcond_fu_540_p2 and not_exitcond_flatten_fu_535_p2);
    exitcond_flatten1_fu_490_p2 <= "1" when (indvar_flatten1_reg_268 = ap_const_lv11_6C0) else "0";
    exitcond_flatten24_mid_fu_735_p2 <= (exitcond_flatten3_fu_729_p2 and not_exitcond_flatten1_fu_711_p2);
    exitcond_flatten24_not_fu_787_p2 <= (exitcond_flatten3_fu_729_p2 xor ap_const_lv1_1);
    exitcond_flatten2_fu_697_p2 <= "1" when (indvar_flatten3_reg_348 = ap_const_lv7_4B) else "0";
    exitcond_flatten3_fu_729_p2 <= "1" when (indvar_flatten4_reg_370 = ap_const_lv6_19) else "0";
    exitcond_flatten4_fu_679_p2 <= "1" when (indvar_flatten2_reg_326 = ap_const_lv10_2EE) else "0";
    exitcond_flatten5_fu_999_p2 <= "1" when (indvar_flatten6_reg_439 = ap_const_lv10_190) else "0";
    exitcond_flatten6_fu_987_p2 <= "1" when (indvar_flatten5_reg_416 = ap_const_lv12_FA0) else "0";
    exitcond_flatten_fu_502_p2 <= "1" when (indvar_flatten_reg_291 = ap_const_lv10_240) else "0";
    exitcond_fu_540_p2 <= "1" when (j_phi_fu_318_p4 = ap_const_lv5_18) else "0";
    exitcond_mid_fu_1043_p2 <= (exitcond2_fu_1037_p2 and not_exitcond_flatten2_fu_1032_p2);

    -- feature_map_address0 assign process. --
    feature_map_address0_assign_proc : process(ap_reg_ppiten_pp3_it2, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_address0, tmp_44_cast_fu_1214_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp3_it2)) then 
            feature_map_address0 <= tmp_44_cast_fu_1214_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            feature_map_address0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_address0;
        else 
            feature_map_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    -- feature_map_ce0 assign process. --
    feature_map_ce0_assign_proc : process(ap_reg_ppiten_pp3_it2, ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_reg_ppiten_pp3_it3, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it2) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it3))))) then 
            feature_map_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            feature_map_ce0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_ce0;
        else 
            feature_map_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    feature_map_d0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_d0;

    -- feature_map_we0 assign process. --
    feature_map_we0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            feature_map_we0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_we0;
        else 
            feature_map_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt5_mid2_fu_1049_p3 <= 
        filt_3_fu_1019_p2 when (exitcond_flatten5_reg_1366(0) = '1') else 
        filt5_phi_fu_431_p4;

    -- filt5_phi_fu_431_p4 assign process. --
    filt5_phi_fu_431_p4_assign_proc : process(filt5_reg_427, ap_reg_ppiten_pp3_it2, ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1, filt5_mid2_reg_1379)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1))) then 
            filt5_phi_fu_431_p4 <= filt5_mid2_reg_1379;
        else 
            filt5_phi_fu_431_p4 <= filt5_reg_427;
        end if; 
    end process;

    filt_1_fu_971_p2 <= std_logic_vector(unsigned(filt4_reg_405) + unsigned(ap_const_lv4_1));
    filt_2_fu_691_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(filt_phi_fu_341_p4));
    filt_3_fu_1019_p2 <= std_logic_vector(unsigned(filt5_phi_fu_431_p4) + unsigned(ap_const_lv4_1));
    filt_mid2_fu_741_p3 <= 
        filt_2_fu_691_p2 when (exitcond_flatten2_fu_697_p2(0) = '1') else 
        filt_phi_fu_341_p4;

    -- filt_phi_fu_341_p4 assign process. --
    filt_phi_fu_341_p4_assign_proc : process(filt_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_reg_ppiten_pp1_it1, exitcond_flatten4_reg_1278, filt_mid2_reg_1297)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then 
            filt_phi_fu_341_p4 <= filt_mid2_reg_1297;
        else 
            filt_phi_fu_341_p4 <= filt_reg_337;
        end if; 
    end process;


    -- filter_address0 assign process. --
    filter_address0_assign_proc : process(ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_address0, tmp_34_cast_fu_961_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2)) then 
            filter_address0 <= tmp_34_cast_fu_961_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            filter_address0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_address0;
        else 
            filter_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- filter_ce0 assign process. --
    filter_ce0_assign_proc : process(ap_sig_bdd_123, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            filter_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            filter_ce0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_ce0;
        else 
            filter_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_d0 <= ap_reg_ppstg_reg_486_pp1_it1;

    -- filter_we0 assign process. --
    filter_we0_assign_proc : process(ap_sig_bdd_123, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_exitcond_flatten4_reg_1278_pp1_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_123 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten4_reg_1278_pp1_it1)))) then 
            filter_we0 <= ap_const_logic_1;
        else 
            filter_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_ap_start_ap_start_reg;
    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_bias_q0 <= bias_q0;
    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_feature_map_q0 <= feature_map_q0;
    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_filter_q0 <= filter_q0;
    grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_q0 <= image_q0;
    i2_mid2_fu_901_p3 <= 
        i_2_fu_878_p2 when (exitcond4_mid1_reg_1307(0) = '1') else 
        i2_mid_fu_851_p3;
    i2_mid_fu_851_p3 <= 
        ap_const_lv3_0 when (tmp_18_reg_1302(0) = '1') else 
        i2_phi_fu_385_p4;

    -- i2_phi_fu_385_p4 assign process. --
    i2_phi_fu_385_p4_assign_proc : process(i2_reg_381, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_exitcond_flatten4_reg_1278_pp1_it1, i2_mid2_reg_1334)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten4_reg_1278_pp1_it1))) then 
            i2_phi_fu_385_p4 <= i2_mid2_reg_1334;
        else 
            i2_phi_fu_385_p4 <= i2_reg_381;
        end if; 
    end process;

    i6_mid2_fu_1115_p3 <= 
        i_3_fu_1096_p2 when (exitcond_mid_fu_1043_p2(0) = '1') else 
        i6_mid_fu_1025_p3;
    i6_mid_fu_1025_p3 <= 
        ap_const_lv5_0 when (exitcond_flatten5_reg_1366(0) = '1') else 
        i6_phi_fu_454_p4;

    -- i6_phi_fu_454_p4 assign process. --
    i6_phi_fu_454_p4_assign_proc : process(i6_reg_450, ap_reg_ppiten_pp3_it2, ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1, i6_mid2_reg_1395)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1))) then 
            i6_phi_fu_454_p4 <= i6_mid2_reg_1395;
        else 
            i6_phi_fu_454_p4 <= i6_reg_450;
        end if; 
    end process;

    i_1_fu_589_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(i_mid_fu_528_p3));
    i_2_fu_878_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i2_mid_fu_851_p3));
    i_3_fu_1096_p2 <= std_logic_vector(unsigned(i6_mid_fu_1025_p3) + unsigned(ap_const_lv5_1));
    i_mid2_fu_608_p3 <= 
        i_1_fu_589_p2 when (exitcond8_mid_fu_546_p2(0) = '1') else 
        i_mid_fu_528_p3;
    i_mid_fu_528_p3 <= 
        ap_const_lv5_0 when (exitcond_flatten_reg_1239(0) = '1') else 
        i_phi_fu_306_p4;

    -- i_phi_fu_306_p4 assign process. --
    i_phi_fu_306_p4_assign_proc : process(i_reg_302, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1, i_mid2_reg_1267)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1))) then 
            i_phi_fu_306_p4 <= i_mid2_reg_1267;
        else 
            i_phi_fu_306_p4 <= i_reg_302;
        end if; 
    end process;


    -- image_address0 assign process. --
    image_address0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_address0, tmp_23_cast_fu_674_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            image_address0 <= tmp_23_cast_fu_674_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            image_address0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_address0;
        else 
            image_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- image_ce0 assign process. --
    image_ce0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_bdd_100, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st10_fsm_5, grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)))) then 
            image_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_5)) then 
            image_ce0 <= grp_Conv_Accel_conv_hw_24_3_10_5_20_s_fu_474_image_r_ce0;
        else 
            image_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    image_d0 <= ap_reg_ppstg_reg_486_pp0_it1;

    -- image_we0 assign process. --
    image_we0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_bdd_100, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_100)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1)))) then 
            image_we0 <= ap_const_logic_1;
        else 
            image_we0 <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten22_op_fu_823_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(indvar_flatten4_reg_370));
    indvar_flatten36_op_fu_837_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(indvar_flatten3_reg_348));
    indvar_flatten66_op_fu_1005_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_439) + unsigned(ap_const_lv10_1));
    indvar_flatten_next1_fu_496_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_268) + unsigned(ap_const_lv11_1));
    indvar_flatten_next2_fu_829_p3 <= 
        ap_const_lv6_1 when (tmp_18_fu_781_p2(0) = '1') else 
        indvar_flatten22_op_fu_823_p2;
    indvar_flatten_next3_fu_843_p3 <= 
        ap_const_lv7_1 when (exitcond_flatten2_fu_697_p2(0) = '1') else 
        indvar_flatten36_op_fu_837_p2;
    indvar_flatten_next4_fu_685_p2 <= std_logic_vector(unsigned(indvar_flatten2_reg_326) + unsigned(ap_const_lv10_1));
    indvar_flatten_next5_fu_1011_p3 <= 
        ap_const_lv10_1 when (exitcond_flatten5_fu_999_p2(0) = '1') else 
        indvar_flatten66_op_fu_1005_p2;
    indvar_flatten_next6_fu_993_p2 <= std_logic_vector(unsigned(indvar_flatten5_reg_416) + unsigned(ap_const_lv12_1));
    indvar_flatten_next_fu_514_p3 <= 
        ap_const_lv10_1 when (exitcond_flatten_fu_502_p2(0) = '1') else 
        indvar_flatten_op_fu_508_p2;
    indvar_flatten_op_fu_508_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(indvar_flatten_reg_291));
    j3_mid2_fu_893_p3 <= 
        ap_const_lv3_0 when (tmp_23_fu_888_p2(0) = '1') else 
        j3_reg_393;

    -- j3_phi_fu_397_p4 assign process. --
    j3_phi_fu_397_p4_assign_proc : process(j3_reg_393, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_reg_ppiten_pp1_it1, exitcond_flatten4_reg_1278, j_2_fu_950_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten4_reg_1278))) then 
            j3_phi_fu_397_p4 <= j_2_fu_950_p2;
        else 
            j3_phi_fu_397_p4 <= j3_reg_393;
        end if; 
    end process;

    j7_cast3_fu_1191_p1 <= std_logic_vector(resize(unsigned(j7_mid2_reg_1389),12));
    j7_mid2_fu_1107_p3 <= 
        ap_const_lv5_0 when (tmp_32_fu_1102_p2(0) = '1') else 
        j7_phi_fu_466_p4;

    -- j7_phi_fu_466_p4 assign process. --
    j7_phi_fu_466_p4_assign_proc : process(j7_reg_462, ap_reg_ppiten_pp3_it2, ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1, j_3_reg_1408)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten6_reg_1357_pp3_it1))) then 
            j7_phi_fu_466_p4 <= j_3_reg_1408;
        else 
            j7_phi_fu_466_p4 <= j7_reg_462;
        end if; 
    end process;

    j_1_fu_616_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(j_mid2_fu_600_p3));
    j_2_fu_950_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j3_mid2_fu_893_p3));
    j_3_fu_1133_p2 <= std_logic_vector(unsigned(j7_mid2_fu_1107_p3) + unsigned(ap_const_lv5_1));
    j_mid2_fu_600_p3 <= 
        ap_const_lv5_0 when (tmp_5_fu_595_p2(0) = '1') else 
        j_phi_fu_318_p4;

    -- j_phi_fu_318_p4 assign process. --
    j_phi_fu_318_p4_assign_proc : process(j_reg_314, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1, j_1_reg_1273)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten1_reg_1230_pp0_it1))) then 
            j_phi_fu_318_p4 <= j_1_reg_1273;
        else 
            j_phi_fu_318_p4 <= j_reg_314;
        end if; 
    end process;

    last_assign_fu_1219_p2 <= "1" when (tmp_15_fu_1199_p2 = ap_const_lv12_F9F) else "0";
    not_exitcond_flatten1_fu_711_p2 <= (exitcond_flatten2_fu_697_p2 xor ap_const_lv1_1);
    not_exitcond_flatten24_mid_fu_793_p2 <= (exitcond_flatten2_fu_697_p2 or exitcond_flatten24_not_fu_787_p2);
    not_exitcond_flatten2_fu_1032_p2 <= (exitcond_flatten5_reg_1366 xor ap_const_lv1_1);
    not_exitcond_flatten_fu_535_p2 <= (exitcond_flatten_reg_1239 xor ap_const_lv1_1);
    p_shl10_cast_fu_1086_p1 <= std_logic_vector(resize(unsigned(tmp_30_fu_1078_p3),9));
    p_shl11_cast_fu_1157_p3 <= (tmp_33_reg_1402 & ap_const_lv4_0);
    p_shl12_cast_fu_1171_p1 <= std_logic_vector(resize(unsigned(tmp_34_fu_1164_p3),13));
    p_shl1_cast_fu_567_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_559_p3),8));
    p_shl2_cast_fu_579_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_571_p3),8));
    p_shl3_cast_fu_646_p3 <= (tmp_6_fu_628_p2 & ap_const_lv3_0);
    p_shl4_cast_fu_761_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_753_p3),7));
    p_shl5_fu_1139_p3 <= (i6_mid2_reg_1395 & ap_const_lv4_0);
    p_shl6_cast_fu_1153_p1 <= std_logic_vector(resize(unsigned(p_shl6_fu_1146_p3),9));
    p_shl6_fu_1146_p3 <= (i6_mid2_reg_1395 & ap_const_lv2_0);
        p_shl7_fu_868_p1 <= std_logic_vector(resize(signed(tmp_20_fu_861_p3),64));

    p_shl8_cast_fu_926_p3 <= (tmp_26_fu_922_p1 & ap_const_lv2_0);
    p_shl9_cast_fu_1074_p1 <= std_logic_vector(resize(unsigned(tmp_29_fu_1066_p3),9));
    p_shl_cast_fu_638_p3 <= (tmp_9_fu_634_p1 & ap_const_lv5_0);
    tmp1_fu_1194_p2 <= std_logic_vector(unsigned(tmp_7_reg_1384) + unsigned(j7_cast3_fu_1191_p1));
    tmp_10_fu_908_p1 <= std_logic_vector(resize(unsigned(i2_mid2_fu_901_p3),64));
    tmp_11_cast_fu_1123_p1 <= std_logic_vector(resize(unsigned(i6_mid2_fu_1115_p3),9));
    tmp_11_fu_654_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_638_p3) - unsigned(p_shl3_cast_fu_646_p3));
    tmp_13_cast_fu_940_p1 <= std_logic_vector(resize(unsigned(j3_mid2_fu_893_p3),11));
    tmp_13_fu_668_p2 <= std_logic_vector(unsigned(tmp_5_cast_fu_665_p1) + unsigned(tmp_11_fu_654_p2));
    tmp_15_fu_1199_p2 <= std_logic_vector(unsigned(tmp1_fu_1194_p2) + unsigned(tmp_cast_fu_1187_p1));
    tmp_16_cast_fu_1205_p1 <= std_logic_vector(resize(unsigned(j7_mid2_reg_1389),13));
    tmp_16_fu_753_p3 <= (filt_mid2_fu_741_p3 & ap_const_lv2_0);
        tmp_17_cast_fu_622_p1 <= std_logic_vector(resize(signed(tmp_3_reg_1257),9));

    tmp_17_fu_765_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_761_p1) - unsigned(tmp_3_cast_fu_749_p1));
    tmp_18_fu_781_p2 <= (exitcond_flatten24_mid_fu_735_p2 or exitcond_flatten2_fu_697_p2);
    tmp_19_fu_817_p2 <= std_logic_vector(unsigned(tmp_9_cast_fu_813_p1) + unsigned(tmp_25_cast_fu_771_p1));
    tmp_1_fu_559_p3 <= (ch_mid2_fu_552_p3 & ap_const_lv5_0);
    tmp_20_fu_861_p3 <= (tmp_19_reg_1318 & ap_const_lv2_0);
    tmp_21_fu_872_p2 <= std_logic_vector(signed(p_shl7_fu_868_p1) + signed(tmp_27_cast_fu_858_p1));
    tmp_22_fu_884_p2 <= (exitcond4_mid1_reg_1307 or exitcond_flatten24_mid_reg_1292);
    tmp_23_cast_fu_674_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_668_p2),64));
    tmp_23_fu_888_p2 <= (tmp_22_fu_884_p2 or exitcond_flatten2_reg_1287);
    tmp_24_fu_912_p2 <= std_logic_vector(unsigned(tmp_10_fu_908_p1) + unsigned(tmp_21_fu_872_p2));
        tmp_25_cast_fu_771_p1 <= std_logic_vector(resize(signed(tmp_17_fu_765_p2),8));

    tmp_25_fu_918_p1 <= tmp_24_fu_912_p2(11 - 1 downto 0);
    tmp_26_fu_922_p1 <= tmp_24_fu_912_p2(9 - 1 downto 0);
        tmp_27_cast_fu_858_p1 <= std_logic_vector(resize(signed(tmp_19_reg_1318),64));

    tmp_27_fu_934_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_926_p3) + unsigned(tmp_25_fu_918_p1));
    tmp_28_fu_944_p2 <= std_logic_vector(unsigned(tmp_13_cast_fu_940_p1) + unsigned(tmp_27_fu_934_p2));
    tmp_29_fu_1066_p3 <= (filt5_mid2_fu_1049_p3 & ap_const_lv4_0);
    tmp_30_fu_1078_p3 <= (filt5_mid2_fu_1049_p3 & ap_const_lv2_0);
    tmp_31_fu_1090_p2 <= std_logic_vector(unsigned(p_shl9_cast_fu_1074_p1) + unsigned(p_shl10_cast_fu_1086_p1));
    tmp_32_fu_1102_p2 <= (exitcond_mid_fu_1043_p2 or exitcond_flatten5_reg_1366);
    tmp_33_fu_1127_p2 <= std_logic_vector(unsigned(tmp_11_cast_fu_1123_p1) + unsigned(tmp_31_fu_1090_p2));
    tmp_34_cast_fu_961_p1 <= std_logic_vector(resize(unsigned(tmp_28_reg_1339),64));
    tmp_34_fu_1164_p3 <= (tmp_33_reg_1402 & ap_const_lv2_0);
    tmp_35_fu_1175_p2 <= std_logic_vector(unsigned(p_shl11_cast_fu_1157_p3) + unsigned(p_shl12_cast_fu_1171_p1));
    tmp_36_fu_1208_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_1205_p1) + unsigned(tmp_35_fu_1175_p2));
    tmp_3_cast_fu_749_p1 <= std_logic_vector(resize(unsigned(filt_mid2_fu_741_p3),7));
    tmp_3_fu_583_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_567_p1) - unsigned(p_shl2_cast_fu_579_p1));
    tmp_44_cast_fu_1214_p1 <= std_logic_vector(resize(unsigned(tmp_36_fu_1208_p2),64));
    tmp_5_cast_fu_665_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1262),12));
    tmp_5_fu_595_p2 <= (exitcond8_mid_fu_546_p2 or exitcond_flatten_reg_1239);
    tmp_6_cast_fu_625_p1 <= std_logic_vector(resize(unsigned(i_mid2_reg_1267),9));
    tmp_6_fu_628_p2 <= std_logic_vector(unsigned(tmp_6_cast_fu_625_p1) + unsigned(tmp_17_cast_fu_622_p1));
    tmp_7_fu_1060_p0 <= tmp_7_fu_1060_p00(4 - 1 downto 0);
    tmp_7_fu_1060_p00 <= std_logic_vector(resize(unsigned(filt5_mid2_fu_1049_p3),12));
    tmp_7_fu_1060_p2 <= std_logic_vector(resize(unsigned(tmp_7_fu_1060_p0) * unsigned(ap_const_lv12_190), 12));
    tmp_8_fu_571_p3 <= (ch_mid2_fu_552_p3 & ap_const_lv3_0);
    tmp_9_cast_fu_813_p1 <= std_logic_vector(resize(unsigned(ch1_mid2_fu_805_p3),8));
    tmp_9_fu_634_p1 <= tmp_6_fu_628_p2(7 - 1 downto 0);
    tmp_cast_fu_1187_p1 <= std_logic_vector(resize(unsigned(tmp_fu_1181_p2),12));
    tmp_fu_1181_p2 <= std_logic_vector(unsigned(p_shl5_fu_1139_p3) + unsigned(p_shl6_cast_fu_1153_p1));
    tmp_s_fu_982_p1 <= std_logic_vector(resize(unsigned(filt4_reg_405),64));
end behav;
