

================================================================
== Vivado HLS Report for 'Conv_Accel_wrapped_conv_hw'
================================================================
* Date:           Sat Jun 17 17:05:34 2017

* Version:        2015.3 (Build 1368829 on Mon Sep 28 20:31:51 PM 2015)
* Project:        Lab7_HLS_Stream
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.55|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  3460201|  3460201|  3460201|  3460201|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  1729|  1729|         3|          1|          1|  1728|    yes   |
        |- Loop 2  |   751|   751|         3|          1|          1|   750|    yes   |
        |- Loop 3  |    10|    10|         1|          1|          1|    10|    yes   |
        |- Loop 4  |  4002|  4002|         4|          1|          1|  4000|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3
  * Pipeline-2: initiation interval (II) = 1, depth = 1
  * Pipeline-3: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 15
* Pipeline: 4
  Pipeline-0: II = 1, D = 3, States = { 2 3 4 }
  Pipeline-1: II = 1, D = 3, States = { 5 6 7 }
  Pipeline-2: II = 1, D = 1, States = { 8 }
  Pipeline-3: II = 1, D = 4, States = { 11 12 13 14 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond_flatten1)
	3  / (!exitcond_flatten1)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	8  / (exitcond_flatten4)
	6  / (!exitcond_flatten4)
6 --> 
	7  / true
7 --> 
	5  / true
8 --> 
	9  / (exitcond3)
	8  / (!exitcond3)
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	15  / (exitcond_flatten6)
	12  / (!exitcond_flatten6)
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	11  / true
15 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_16 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecInterface(i32* %in_stream_data_V, i4* %in_stream_keep_V, i4* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)

ST_1: stg_17 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecInterface(i32* %out_stream_data_V, i4* %out_stream_keep_V, i4* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)

ST_1: image [1/1] 0.00ns
:2  %image = alloca [1728 x float], align 4

ST_1: filter [1/1] 0.00ns
:3  %filter = alloca [750 x float], align 4

ST_1: bias [1/1] 0.00ns
:4  %bias = alloca [10 x float], align 16

ST_1: feature_map [1/1] 0.00ns
:5  %feature_map = alloca [4000 x float], align 4

ST_1: stg_22 [1/1] 1.57ns
:6  br label %.preheader17


 <State 2>: 3.68ns
ST_2: indvar_flatten1 [1/1] 0.00ns
.preheader17:0  %indvar_flatten1 = phi i11 [ 0, %0 ], [ %indvar_flatten_next1, %.preheader18.preheader ]

ST_2: ch [1/1] 0.00ns
.preheader17:1  %ch = phi i2 [ 0, %0 ], [ %ch_mid2, %.preheader18.preheader ]

ST_2: indvar_flatten [1/1] 0.00ns
.preheader17:2  %indvar_flatten = phi i10 [ 0, %0 ], [ %indvar_flatten_next, %.preheader18.preheader ]

ST_2: i [1/1] 0.00ns
.preheader17:3  %i = phi i5 [ 0, %0 ], [ %i_mid2, %.preheader18.preheader ]

ST_2: j [1/1] 0.00ns
.preheader17:4  %j = phi i5 [ 0, %0 ], [ %j_1, %.preheader18.preheader ]

ST_2: exitcond_flatten1 [1/1] 2.11ns
.preheader17:5  %exitcond_flatten1 = icmp eq i11 %indvar_flatten1, -320

ST_2: indvar_flatten_next1 [1/1] 1.84ns
.preheader17:6  %indvar_flatten_next1 = add i11 %indvar_flatten1, 1

ST_2: stg_30 [1/1] 1.57ns
.preheader17:7  br i1 %exitcond_flatten1, label %.preheader13, label %.preheader18.preheader

ST_2: exitcond_flatten [1/1] 2.07ns
.preheader18.preheader:2  %exitcond_flatten = icmp eq i10 %indvar_flatten, -448

ST_2: empty_3 [1/1] 0.00ns
.preheader18.preheader:26  %empty_3 = call { i32, i4, i4, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i4P.i1P.i5P.i5P(i32* %in_stream_data_V, i4* %in_stream_keep_V, i4* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_2: in_stream_data_V_val [1/1] 0.00ns
.preheader18.preheader:27  %in_stream_data_V_val = extractvalue { i32, i4, i4, i4, i1, i5, i5 } %empty_3, 0

ST_2: indvar_flatten_op [1/1] 1.84ns
.preheader18.preheader:36  %indvar_flatten_op = add i10 1, %indvar_flatten

ST_2: indvar_flatten_next [1/1] 1.37ns
.preheader18.preheader:37  %indvar_flatten_next = select i1 %exitcond_flatten, i10 1, i10 %indvar_flatten_op


 <State 3>: 7.74ns
ST_3: ch_1 [1/1] 0.80ns
.preheader18.preheader:0  %ch_1 = add i2 1, %ch

ST_3: i_mid [1/1] 1.37ns
.preheader18.preheader:3  %i_mid = select i1 %exitcond_flatten, i5 0, i5 %i

ST_3: not_exitcond_flatten [1/1] 1.37ns
.preheader18.preheader:4  %not_exitcond_flatten = xor i1 %exitcond_flatten, true

ST_3: exitcond [1/1] 1.91ns
.preheader18.preheader:5  %exitcond = icmp eq i5 %j, -8

ST_3: exitcond8_mid [1/1] 1.37ns
.preheader18.preheader:6  %exitcond8_mid = and i1 %exitcond, %not_exitcond_flatten

ST_3: ch_mid2 [1/1] 1.37ns
.preheader18.preheader:7  %ch_mid2 = select i1 %exitcond_flatten, i2 %ch_1, i2 %ch

ST_3: tmp_1 [1/1] 0.00ns
.preheader18.preheader:8  %tmp_1 = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 %ch_mid2, i5 0)

ST_3: p_shl1_cast [1/1] 0.00ns
.preheader18.preheader:9  %p_shl1_cast = zext i7 %tmp_1 to i8

ST_3: tmp_8 [1/1] 0.00ns
.preheader18.preheader:10  %tmp_8 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %ch_mid2, i3 0)

ST_3: p_shl2_cast [1/1] 0.00ns
.preheader18.preheader:11  %p_shl2_cast = zext i5 %tmp_8 to i8

ST_3: tmp_3 [1/1] 1.72ns
.preheader18.preheader:12  %tmp_3 = sub i8 %p_shl1_cast, %p_shl2_cast

ST_3: i_1 [1/1] 1.72ns
.preheader18.preheader:14  %i_1 = add i5 1, %i_mid

ST_3: tmp_5 [1/1] 1.37ns
.preheader18.preheader:15  %tmp_5 = or i1 %exitcond8_mid, %exitcond_flatten

ST_3: j_mid2 [1/1] 1.37ns
.preheader18.preheader:16  %j_mid2 = select i1 %tmp_5, i5 0, i5 %j

ST_3: i_mid2 [1/1] 1.37ns
.preheader18.preheader:17  %i_mid2 = select i1 %exitcond8_mid, i5 %i_1, i5 %i_mid

ST_3: j_1 [1/1] 1.72ns
.preheader18.preheader:35  %j_1 = add i5 1, %j_mid2


 <State 4>: 7.17ns
ST_4: empty [1/1] 0.00ns
.preheader18.preheader:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1728, i64 1728, i64 1728)

ST_4: tmp_17_cast [1/1] 0.00ns
.preheader18.preheader:13  %tmp_17_cast = sext i8 %tmp_3 to i9

ST_4: tmp_6_cast [1/1] 0.00ns
.preheader18.preheader:18  %tmp_6_cast = zext i5 %i_mid2 to i9

ST_4: tmp_6 [1/1] 1.72ns
.preheader18.preheader:19  %tmp_6 = add i9 %tmp_6_cast, %tmp_17_cast

ST_4: tmp_9 [1/1] 0.00ns
.preheader18.preheader:20  %tmp_9 = trunc i9 %tmp_6 to i7

ST_4: p_shl_cast [1/1] 0.00ns
.preheader18.preheader:21  %p_shl_cast = call i12 @_ssdm_op_BitConcatenate.i12.i7.i5(i7 %tmp_9, i5 0)

ST_4: p_shl3_cast [1/1] 0.00ns
.preheader18.preheader:22  %p_shl3_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %tmp_6, i3 0)

ST_4: tmp_11 [1/1] 1.37ns
.preheader18.preheader:23  %tmp_11 = sub i12 %p_shl_cast, %p_shl3_cast

ST_4: tmp_4 [1/1] 0.00ns
.preheader18.preheader:24  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)

ST_4: stg_61 [1/1] 0.00ns
.preheader18.preheader:25  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_4: ret_1 [1/1] 0.00ns
.preheader18.preheader:28  %ret_1 = bitcast i32 %in_stream_data_V_val to float

ST_4: tmp_5_cast [1/1] 0.00ns
.preheader18.preheader:29  %tmp_5_cast = zext i5 %j_mid2 to i12

ST_4: tmp_13 [1/1] 1.37ns
.preheader18.preheader:30  %tmp_13 = add i12 %tmp_5_cast, %tmp_11

ST_4: tmp_23_cast [1/1] 0.00ns
.preheader18.preheader:31  %tmp_23_cast = zext i12 %tmp_13 to i64

ST_4: image_addr [1/1] 0.00ns
.preheader18.preheader:32  %image_addr = getelementptr [1728 x float]* %image, i64 0, i64 %tmp_23_cast

ST_4: stg_67 [1/1] 2.71ns
.preheader18.preheader:33  store float %ret_1, float* %image_addr, align 4

ST_4: empty_4 [1/1] 0.00ns
.preheader18.preheader:34  %empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_4)

ST_4: stg_69 [1/1] 0.00ns
.preheader18.preheader:38  br label %.preheader17


 <State 5>: 7.80ns
ST_5: indvar_flatten2 [1/1] 0.00ns
.preheader13:0  %indvar_flatten2 = phi i10 [ %indvar_flatten_next4, %.preheader16 ], [ 0, %.preheader17 ]

ST_5: filt [1/1] 0.00ns
.preheader13:1  %filt = phi i4 [ %filt_mid2, %.preheader16 ], [ 0, %.preheader17 ]

ST_5: indvar_flatten3 [1/1] 0.00ns
.preheader13:2  %indvar_flatten3 = phi i7 [ %indvar_flatten_next3, %.preheader16 ], [ 0, %.preheader17 ]

ST_5: ch1 [1/1] 0.00ns
.preheader13:3  %ch1 = phi i2 [ %ch1_mid2, %.preheader16 ], [ 0, %.preheader17 ]

ST_5: indvar_flatten4 [1/1] 0.00ns
.preheader13:4  %indvar_flatten4 = phi i6 [ %indvar_flatten_next2, %.preheader16 ], [ 0, %.preheader17 ]

ST_5: i2 [1/1] 0.00ns
.preheader13:5  %i2 = phi i3 [ %i2_mid2, %.preheader16 ], [ 0, %.preheader17 ]

ST_5: j3 [1/1] 0.00ns
.preheader13:6  %j3 = phi i3 [ %j_2, %.preheader16 ], [ 0, %.preheader17 ]

ST_5: exitcond_flatten4 [1/1] 2.07ns
.preheader13:7  %exitcond_flatten4 = icmp eq i10 %indvar_flatten2, -274

ST_5: indvar_flatten_next4 [1/1] 1.84ns
.preheader13:8  %indvar_flatten_next4 = add i10 %indvar_flatten2, 1

ST_5: stg_79 [1/1] 1.57ns
.preheader13:9  br i1 %exitcond_flatten4, label %.preheader12, label %.preheader16

ST_5: filt_2 [1/1] 0.80ns
.preheader16:0  %filt_2 = add i4 1, %filt

ST_5: exitcond_flatten2 [1/1] 1.97ns
.preheader16:2  %exitcond_flatten2 = icmp eq i7 %indvar_flatten3, -53

ST_5: ch1_mid [1/1] 1.37ns
.preheader16:3  %ch1_mid = select i1 %exitcond_flatten2, i2 0, i2 %ch1

ST_5: not_exitcond_flatten1 [1/1] 1.37ns
.preheader16:4  %not_exitcond_flatten1 = xor i1 %exitcond_flatten2, true

ST_5: exitcond1 [1/1] 1.62ns
.preheader16:5  %exitcond1 = icmp eq i3 %j3, -3

ST_5: exitcond4_mid [1/1] 1.37ns
.preheader16:6  %exitcond4_mid = and i1 %exitcond1, %not_exitcond_flatten1

ST_5: exitcond_flatten3 [1/1] 1.94ns
.preheader16:7  %exitcond_flatten3 = icmp eq i6 %indvar_flatten4, 25

ST_5: exitcond_flatten24_mid [1/1] 1.37ns
.preheader16:8  %exitcond_flatten24_mid = and i1 %exitcond_flatten3, %not_exitcond_flatten1

ST_5: filt_mid2 [1/1] 1.37ns
.preheader16:9  %filt_mid2 = select i1 %exitcond_flatten2, i4 %filt_2, i4 %filt

ST_5: tmp_3_cast [1/1] 0.00ns
.preheader16:10  %tmp_3_cast = zext i4 %filt_mid2 to i7

ST_5: tmp_16 [1/1] 0.00ns
.preheader16:11  %tmp_16 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %filt_mid2, i2 0)

ST_5: p_shl4_cast [1/1] 0.00ns
.preheader16:12  %p_shl4_cast = zext i6 %tmp_16 to i7

ST_5: tmp_17 [1/1] 1.72ns
.preheader16:13  %tmp_17 = sub i7 %p_shl4_cast, %tmp_3_cast

ST_5: tmp_25_cast [1/1] 0.00ns
.preheader16:14  %tmp_25_cast = sext i7 %tmp_17 to i8

ST_5: ch_2 [1/1] 0.80ns
.preheader16:15  %ch_2 = add i2 1, %ch1_mid

ST_5: tmp_18 [1/1] 1.37ns
.preheader16:16  %tmp_18 = or i1 %exitcond_flatten24_mid, %exitcond_flatten2

ST_5: exitcond_flatten24_not [1/1] 1.37ns
.preheader16:18  %exitcond_flatten24_not = xor i1 %exitcond_flatten3, true

ST_5: not_exitcond_flatten24_mid [1/1] 1.37ns
.preheader16:19  %not_exitcond_flatten24_mid = or i1 %exitcond_flatten2, %exitcond_flatten24_not

ST_5: exitcond4_mid1 [1/1] 1.37ns
.preheader16:20  %exitcond4_mid1 = and i1 %exitcond4_mid, %not_exitcond_flatten24_mid

ST_5: ch1_mid2 [1/1] 1.37ns
.preheader16:21  %ch1_mid2 = select i1 %exitcond_flatten24_mid, i2 %ch_2, i2 %ch1_mid

ST_5: tmp_9_cast [1/1] 0.00ns
.preheader16:22  %tmp_9_cast = zext i2 %ch1_mid2 to i8

ST_5: tmp_19 [1/1] 1.72ns
.preheader16:23  %tmp_19 = add i8 %tmp_9_cast, %tmp_25_cast

ST_5: empty_6 [1/1] 0.00ns
.preheader16:41  %empty_6 = call { i32, i4, i4, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i4P.i1P.i5P.i5P(i32* %in_stream_data_V, i4* %in_stream_keep_V, i4* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_5: in_stream_data_V_val1 [1/1] 0.00ns
.preheader16:42  %in_stream_data_V_val1 = extractvalue { i32, i4, i4, i4, i1, i5, i5 } %empty_6, 0

ST_5: indvar_flatten22_op [1/1] 1.72ns
.preheader16:51  %indvar_flatten22_op = add i6 1, %indvar_flatten4

ST_5: indvar_flatten_next2 [1/1] 1.37ns
.preheader16:52  %indvar_flatten_next2 = select i1 %tmp_18, i6 1, i6 %indvar_flatten22_op

ST_5: indvar_flatten36_op [1/1] 1.72ns
.preheader16:53  %indvar_flatten36_op = add i7 1, %indvar_flatten3

ST_5: indvar_flatten_next3 [1/1] 1.37ns
.preheader16:54  %indvar_flatten_next3 = select i1 %exitcond_flatten2, i7 1, i7 %indvar_flatten36_op


 <State 6>: 7.65ns
ST_6: i2_mid [1/1] 1.37ns
.preheader16:17  %i2_mid = select i1 %tmp_18, i3 0, i3 %i2

ST_6: tmp_27_cast [1/1] 0.00ns
.preheader16:24  %tmp_27_cast = sext i8 %tmp_19 to i64

ST_6: tmp_20 [1/1] 0.00ns
.preheader16:25  %tmp_20 = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %tmp_19, i2 0)

ST_6: p_shl7 [1/1] 0.00ns
.preheader16:26  %p_shl7 = sext i10 %tmp_20 to i64

ST_6: tmp_21 [1/1] 1.37ns
.preheader16:27  %tmp_21 = add i64 %p_shl7, %tmp_27_cast

ST_6: i_2 [1/1] 0.80ns
.preheader16:28  %i_2 = add i3 1, %i2_mid

ST_6: tmp_22 [1/1] 1.37ns
.preheader16:29  %tmp_22 = or i1 %exitcond4_mid1, %exitcond_flatten24_mid

ST_6: tmp_23 [1/1] 1.37ns
.preheader16:30  %tmp_23 = or i1 %tmp_22, %exitcond_flatten2

ST_6: j3_mid2 [1/1] 1.37ns
.preheader16:31  %j3_mid2 = select i1 %tmp_23, i3 0, i3 %j3

ST_6: i2_mid2 [1/1] 1.37ns
.preheader16:32  %i2_mid2 = select i1 %exitcond4_mid1, i3 %i_2, i3 %i2_mid

ST_6: tmp_10 [1/1] 0.00ns
.preheader16:33  %tmp_10 = zext i3 %i2_mid2 to i64

ST_6: tmp_24 [1/1] 1.37ns
.preheader16:34  %tmp_24 = add i64 %tmp_10, %tmp_21

ST_6: tmp_25 [1/1] 0.00ns
.preheader16:35  %tmp_25 = trunc i64 %tmp_24 to i11

ST_6: tmp_26 [1/1] 0.00ns
.preheader16:36  %tmp_26 = trunc i64 %tmp_24 to i9

ST_6: p_shl8_cast [1/1] 0.00ns
.preheader16:37  %p_shl8_cast = call i11 @_ssdm_op_BitConcatenate.i11.i9.i2(i9 %tmp_26, i2 0)

ST_6: tmp_27 [1/1] 1.37ns
.preheader16:38  %tmp_27 = add i11 %p_shl8_cast, %tmp_25

ST_6: tmp_13_cast [1/1] 0.00ns
.preheader16:44  %tmp_13_cast = zext i3 %j3_mid2 to i11

ST_6: tmp_28 [1/1] 1.37ns
.preheader16:45  %tmp_28 = add i11 %tmp_13_cast, %tmp_27

ST_6: j_2 [1/1] 0.80ns
.preheader16:50  %j_2 = add i3 1, %j3_mid2


 <State 7>: 2.71ns
ST_7: empty_5 [1/1] 0.00ns
.preheader16:1  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 750, i64 750, i64 750)

ST_7: tmp_12 [1/1] 0.00ns
.preheader16:39  %tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)

ST_7: stg_129 [1/1] 0.00ns
.preheader16:40  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_7: ret_2 [1/1] 0.00ns
.preheader16:43  %ret_2 = bitcast i32 %in_stream_data_V_val1 to float

ST_7: tmp_34_cast [1/1] 0.00ns
.preheader16:46  %tmp_34_cast = zext i11 %tmp_28 to i64

ST_7: filter_addr [1/1] 0.00ns
.preheader16:47  %filter_addr = getelementptr [750 x float]* %filter, i64 0, i64 %tmp_34_cast

ST_7: stg_133 [1/1] 2.71ns
.preheader16:48  store float %ret_2, float* %filter_addr, align 4

ST_7: empty_7 [1/1] 0.00ns
.preheader16:49  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_12)

ST_7: stg_135 [1/1] 0.00ns
.preheader16:55  br label %.preheader13


 <State 8>: 2.39ns
ST_8: filt4 [1/1] 0.00ns
.preheader12:0  %filt4 = phi i4 [ %filt_1, %1 ], [ 0, %.preheader13 ]

ST_8: exitcond3 [1/1] 1.88ns
.preheader12:1  %exitcond3 = icmp eq i4 %filt4, -6

ST_8: filt_1 [1/1] 0.80ns
.preheader12:2  %filt_1 = add i4 %filt4, 1

ST_8: stg_139 [1/1] 0.00ns
.preheader12:3  br i1 %exitcond3, label %2, label %1

ST_8: empty_8 [1/1] 0.00ns
:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_8: tmp_2 [1/1] 0.00ns
:1  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_8: stg_142 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_8: empty_9 [1/1] 0.00ns
:3  %empty_9 = call { i32, i4, i4, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i4P.i1P.i5P.i5P(i32* %in_stream_data_V, i4* %in_stream_keep_V, i4* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_8: in_stream_data_V_val2 [1/1] 0.00ns
:4  %in_stream_data_V_val2 = extractvalue { i32, i4, i4, i4, i1, i5, i5 } %empty_9, 0

ST_8: ret [1/1] 0.00ns
:5  %ret = bitcast i32 %in_stream_data_V_val2 to float

ST_8: tmp_s [1/1] 0.00ns
:6  %tmp_s = zext i4 %filt4 to i64

ST_8: bias_addr [1/1] 0.00ns
:7  %bias_addr = getelementptr inbounds [10 x float]* %bias, i64 0, i64 %tmp_s

ST_8: stg_148 [1/1] 2.39ns
:8  store float %ret, float* %bias_addr, align 4

ST_8: empty_10 [1/1] 0.00ns
:9  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_2)

ST_8: stg_150 [1/1] 0.00ns
:10  br label %.preheader12


 <State 9>: 0.00ns
ST_9: stg_151 [2/2] 0.00ns
:0  call fastcc void @"Conv_Accel_conv_hw<24, 3, 10, 5, 20>"([1728 x float]* %image, [750 x float]* %filter, [10 x float]* %bias, [4000 x float]* %feature_map)


 <State 10>: 1.57ns
ST_10: stg_152 [1/2] 0.00ns
:0  call fastcc void @"Conv_Accel_conv_hw<24, 3, 10, 5, 20>"([1728 x float]* %image, [750 x float]* %filter, [10 x float]* %bias, [4000 x float]* %feature_map)

ST_10: stg_153 [1/1] 1.57ns
:1  br label %.preheader


 <State 11>: 3.51ns
ST_11: indvar_flatten5 [1/1] 0.00ns
.preheader:0  %indvar_flatten5 = phi i12 [ 0, %2 ], [ %indvar_flatten_next6, %.preheader11.preheader ]

ST_11: filt5 [1/1] 0.00ns
.preheader:1  %filt5 = phi i4 [ 0, %2 ], [ %filt5_mid2, %.preheader11.preheader ]

ST_11: indvar_flatten6 [1/1] 0.00ns
.preheader:2  %indvar_flatten6 = phi i10 [ 0, %2 ], [ %indvar_flatten_next5, %.preheader11.preheader ]

ST_11: i6 [1/1] 0.00ns
.preheader:3  %i6 = phi i5 [ 0, %2 ], [ %i6_mid2, %.preheader11.preheader ]

ST_11: j7 [1/1] 0.00ns
.preheader:4  %j7 = phi i5 [ 0, %2 ], [ %j_3, %.preheader11.preheader ]

ST_11: exitcond_flatten6 [1/1] 2.14ns
.preheader:5  %exitcond_flatten6 = icmp eq i12 %indvar_flatten5, -96

ST_11: indvar_flatten_next6 [1/1] 1.84ns
.preheader:6  %indvar_flatten_next6 = add i12 %indvar_flatten5, 1

ST_11: stg_161 [1/1] 0.00ns
.preheader:7  br i1 %exitcond_flatten6, label %3, label %.preheader11.preheader

ST_11: exitcond_flatten5 [1/1] 2.07ns
.preheader11.preheader:2  %exitcond_flatten5 = icmp eq i10 %indvar_flatten6, 400

ST_11: indvar_flatten66_op [1/1] 1.84ns
.preheader11.preheader:45  %indvar_flatten66_op = add i10 %indvar_flatten6, 1

ST_11: indvar_flatten_next5 [1/1] 1.37ns
.preheader11.preheader:46  %indvar_flatten_next5 = select i1 %exitcond_flatten5, i10 1, i10 %indvar_flatten66_op


 <State 12>: 8.55ns
ST_12: filt_3 [1/1] 0.80ns
.preheader11.preheader:0  %filt_3 = add i4 %filt5, 1

ST_12: i6_mid [1/1] 1.37ns
.preheader11.preheader:3  %i6_mid = select i1 %exitcond_flatten5, i5 0, i5 %i6

ST_12: not_exitcond_flatten2 [1/1] 1.37ns
.preheader11.preheader:4  %not_exitcond_flatten2 = xor i1 %exitcond_flatten5, true

ST_12: exitcond2 [1/1] 1.91ns
.preheader11.preheader:5  %exitcond2 = icmp eq i5 %j7, -12

ST_12: exitcond_mid [1/1] 1.37ns
.preheader11.preheader:6  %exitcond_mid = and i1 %exitcond2, %not_exitcond_flatten2

ST_12: filt5_mid2 [1/1] 1.37ns
.preheader11.preheader:7  %filt5_mid2 = select i1 %exitcond_flatten5, i4 %filt_3, i4 %filt5

ST_12: filt5_cast8 [1/1] 0.00ns
.preheader11.preheader:8  %filt5_cast8 = zext i4 %filt5_mid2 to i12

ST_12: tmp_7 [1/1] 6.38ns
.preheader11.preheader:9  %tmp_7 = mul i12 %filt5_cast8, 400

ST_12: tmp_29 [1/1] 0.00ns
.preheader11.preheader:10  %tmp_29 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %filt5_mid2, i4 0)

ST_12: p_shl9_cast [1/1] 0.00ns
.preheader11.preheader:11  %p_shl9_cast = zext i8 %tmp_29 to i9

ST_12: tmp_30 [1/1] 0.00ns
.preheader11.preheader:12  %tmp_30 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %filt5_mid2, i2 0)

ST_12: p_shl10_cast [1/1] 0.00ns
.preheader11.preheader:13  %p_shl10_cast = zext i6 %tmp_30 to i9

ST_12: tmp_31 [1/1] 1.37ns
.preheader11.preheader:14  %tmp_31 = add i9 %p_shl9_cast, %p_shl10_cast

ST_12: i_3 [1/1] 1.72ns
.preheader11.preheader:15  %i_3 = add i5 %i6_mid, 1

ST_12: tmp_32 [1/1] 1.37ns
.preheader11.preheader:16  %tmp_32 = or i1 %exitcond_mid, %exitcond_flatten5

ST_12: j7_mid2 [1/1] 1.37ns
.preheader11.preheader:17  %j7_mid2 = select i1 %tmp_32, i5 0, i5 %j7

ST_12: i6_mid2 [1/1] 1.37ns
.preheader11.preheader:18  %i6_mid2 = select i1 %exitcond_mid, i5 %i_3, i5 %i6_mid

ST_12: tmp_11_cast [1/1] 0.00ns
.preheader11.preheader:22  %tmp_11_cast = zext i5 %i6_mid2 to i9

ST_12: tmp_33 [1/1] 1.37ns
.preheader11.preheader:23  %tmp_33 = add i9 %tmp_11_cast, %tmp_31

ST_12: j_3 [1/1] 1.72ns
.preheader11.preheader:44  %j_3 = add i5 %j7_mid2, 1


 <State 13>: 6.17ns
ST_13: p_shl5 [1/1] 0.00ns
.preheader11.preheader:19  %p_shl5 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i6_mid2, i4 0)

ST_13: p_shl6 [1/1] 0.00ns
.preheader11.preheader:20  %p_shl6 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i6_mid2, i2 0)

ST_13: p_shl6_cast [1/1] 0.00ns
.preheader11.preheader:21  %p_shl6_cast = zext i7 %p_shl6 to i9

ST_13: p_shl11_cast [1/1] 0.00ns
.preheader11.preheader:24  %p_shl11_cast = call i13 @_ssdm_op_BitConcatenate.i13.i9.i4(i9 %tmp_33, i4 0)

ST_13: tmp_34 [1/1] 0.00ns
.preheader11.preheader:25  %tmp_34 = call i11 @_ssdm_op_BitConcatenate.i11.i9.i2(i9 %tmp_33, i2 0)

ST_13: p_shl12_cast [1/1] 0.00ns
.preheader11.preheader:26  %p_shl12_cast = zext i11 %tmp_34 to i13

ST_13: tmp_35 [1/1] 1.73ns
.preheader11.preheader:27  %tmp_35 = add i13 %p_shl11_cast, %p_shl12_cast

ST_13: tmp [1/1] 1.84ns
.preheader11.preheader:28  %tmp = add i9 %p_shl5, %p_shl6_cast

ST_13: tmp_cast [1/1] 0.00ns
.preheader11.preheader:29  %tmp_cast = zext i9 %tmp to i12

ST_13: j7_cast3 [1/1] 0.00ns
.preheader11.preheader:30  %j7_cast3 = zext i5 %j7_mid2 to i12

ST_13: tmp1 [1/1] 1.37ns
.preheader11.preheader:33  %tmp1 = add i12 %tmp_7, %j7_cast3

ST_13: tmp_15 [1/1] 1.37ns
.preheader11.preheader:34  %tmp_15 = add i12 %tmp1, %tmp_cast

ST_13: tmp_16_cast [1/1] 0.00ns
.preheader11.preheader:35  %tmp_16_cast = zext i5 %j7_mid2 to i13

ST_13: tmp_36 [1/1] 1.73ns
.preheader11.preheader:36  %tmp_36 = add i13 %tmp_16_cast, %tmp_35

ST_13: tmp_44_cast [1/1] 0.00ns
.preheader11.preheader:37  %tmp_44_cast = zext i13 %tmp_36 to i64

ST_13: feature_map_addr [1/1] 0.00ns
.preheader11.preheader:38  %feature_map_addr = getelementptr [4000 x float]* %feature_map, i64 0, i64 %tmp_44_cast

ST_13: last_assign [1/1] 2.14ns
.preheader11.preheader:39  %last_assign = icmp eq i12 %tmp_15, -97

ST_13: feature_map_load [2/2] 2.71ns
.preheader11.preheader:40  %feature_map_load = load float* %feature_map_addr, align 4


 <State 14>: 2.71ns
ST_14: empty_11 [1/1] 0.00ns
.preheader11.preheader:1  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4000, i64 4000, i64 4000)

ST_14: tmp_14 [1/1] 0.00ns
.preheader11.preheader:31  %tmp_14 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)

ST_14: stg_205 [1/1] 0.00ns
.preheader11.preheader:32  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_14: feature_map_load [1/2] 2.71ns
.preheader11.preheader:40  %feature_map_load = load float* %feature_map_addr, align 4

ST_14: val_assign [1/1] 0.00ns
.preheader11.preheader:41  %val_assign = bitcast float %feature_map_load to i32

ST_14: stg_208 [1/1] 0.00ns
.preheader11.preheader:42  call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i4P.i1P.i5P.i5P(i32* %out_stream_data_V, i4* %out_stream_keep_V, i4* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, i32 %val_assign, i4 -1, i4 -1, i4 0, i1 %last_assign, i5 0, i5 0)

ST_14: empty_12 [1/1] 0.00ns
.preheader11.preheader:43  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_14)

ST_14: stg_210 [1/1] 0.00ns
.preheader11.preheader:47  br label %.preheader


 <State 15>: 0.00ns
ST_15: stg_211 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
